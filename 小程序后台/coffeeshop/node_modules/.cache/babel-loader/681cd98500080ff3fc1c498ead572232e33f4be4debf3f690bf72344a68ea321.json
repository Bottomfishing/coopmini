{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nconst axios = require('axios');\n// 配置常量\nconst CONFIG = {\n  appId: 'wx6872b1e938e23c07',\n  appSecret: 'bb0342f524bf2fe87416defe5797f40a',\n  env: 'cloud1-6gzxjy5k59c1f367'\n};\nexport default {\n  name: 'goodsCategoriesList',\n  data() {\n    return {\n      dialogVisible: false,\n      editForm: {\n        good: '',\n        name: '',\n        price: '',\n        category: '',\n        image: ''\n      },\n      queryParam: {},\n      total: 0,\n      goodsData: [],\n      timer: null\n    };\n  },\n  methods: {\n    // 将数据上传到微信云数据库\n    async handleUpload() {\n      try {\n        const accessToken = await this.getAccessToken();\n        const dataToUpload = {\n          good: this.queryParam.good,\n          name: this.queryParam.name,\n          price: this.queryParam.price,\n          category: this.queryParam.category,\n          image: this.queryParam.image\n        };\n        // 由于 response 变量声明后未使用，直接执行请求，不保存响应结果\n        await axios.post(`/wechat-api/tcb/databaseadd?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: `db.collection('goods').add({ data: ${JSON.stringify(dataToUpload)} })`\n        });\n        this.$message.success('数据上传成功');\n        this.queryCloudDatabase();\n      } catch (error) {\n        console.error('数据上传失败:', error);\n        this.$message.error('数据上传失败，请重试');\n      }\n    },\n    handleSizeChange(val) {\n      this.queryParam.limit = val;\n      this.queryCloudDatabase();\n    },\n    handlePageChange(val) {\n      this.queryParam.page = val;\n      this.queryCloudDatabase();\n    },\n    // 获取微信访问令牌\n    async getAccessToken() {\n      try {\n        const response = await axios.get('/cgi-bin/token', {\n          params: {\n            grant_type: 'client_credential',\n            appid: CONFIG.appId,\n            secret: CONFIG.appSecret\n          }\n        });\n        return response.data.access_token;\n      } catch (error) {\n        console.error('获取访问令牌失败:', error);\n        throw error;\n      }\n    },\n    handleUploadSuccess(response) {\n      this.queryParam.image = response.imageUrl;\n      this.$message.success('图片上传成功');\n    },\n    // 提交编辑信息\n    async submitEdit() {\n      try {\n        const accessToken = await this.getAccessToken();\n        const dataToUpdate = {\n          good: this.editForm.good,\n          name: this.editForm.name,\n          price: this.editForm.price,\n          category: this.editForm.category,\n          image: this.editForm.image\n        };\n        await axios.post(`/wechat-api/tcb/databaseupdate?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: `db.collection('goods').doc('${this.editForm._id}').update({ data: ${JSON.stringify(dataToUpdate)} })`\n        });\n        this.$message.success('商品信息编辑成功');\n        this.dialogVisible = false;\n        this.queryCloudDatabase();\n      } catch (error) {\n        console.error('商品信息编辑失败:', error);\n        this.$message.error('商品信息编辑失败，请重试');\n      }\n    },\n    // 编辑商品信息并上传到云数据库\n    async handleEdit(item) {\n      this.editForm = {\n        _id: item._id,\n        good: item.good,\n        name: item.name,\n        price: item.price,\n        category: item.category,\n        image: item.image\n      };\n      this.dialogVisible = true;\n      try {\n        const accessToken = await this.getAccessToken();\n        const dataToUpdate = {\n          good: item.good,\n          name: item.name,\n          price: item.price,\n          category: item.category,\n          image: item.image\n        };\n        await axios.post(`/wechat-api/tcb/databaseupdate?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: `db.collection('goods').doc('${item._id}').update({ data: ${JSON.stringify(dataToUpdate)} })`\n        });\n        this.queryCloudDatabase();\n      } catch (error) {\n        console.error('商品信息编辑失败:', error);\n        this.$message.error('商品信息编辑失败，请重试');\n      }\n    },\n    // 删除商品信息\n    async handleDelete(id) {\n      try {\n        const accessToken = await this.getAccessToken();\n        await axios.post(`/wechat-api/tcb/databasedelete?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: `db.collection('goods').doc('${id}').remove()`\n        });\n        this.$message.success('商品删除成功');\n        this.queryCloudDatabase();\n      } catch (error) {\n        console.error('商品删除失败:', error);\n        this.$message.error('商品删除失败，请重试');\n      }\n    },\n    // 查询云数据库\n    async queryCloudDatabase() {\n      try {\n        const accessToken = await this.getAccessToken();\n        const query = {\n          env: CONFIG.env,\n          query: `db.collection('goods').skip(${(this.queryParam.page - 1) * this.queryParam.limit}).limit(${this.queryParam.limit}).get()`,\n          totalQuery: \"db.collection('goods').count()\"\n        };\n        const response = await axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, query);\n        const [dataRes, countRes] = await Promise.all([axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: query.query\n        }), axios.post(`/wechat-api/tcb/databasecount?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: query.totalQuery\n        })]);\n        const newData = dataRes.data.data.map(item => JSON.parse(item));\n        if (JSON.stringify(newData) !== JSON.stringify(this.goodsData)) {\n          this.goodsData = newData;\n          this.total = countRes.data.count;\n        }\n        return response.data;\n      } catch (error) {\n        console.error('查询云数据库失败:', error);\n        throw error;\n      }\n    }\n  },\n  mounted() {\n    // 首次加载数据\n    this.queryCloudDatabase();\n    // 启动定时器（每5秒请求一次）\n    this.timer = setInterval(() => {\n      this.queryCloudDatabase().catch(() => {});\n    }, 10000);\n  },\n  beforeUnmount() {\n    // 组件卸载时清除定时器\n    if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","require","CONFIG","appId","appSecret","env","name","data","dialogVisible","editForm","good","price","category","image","queryParam","total","goodsData","timer","methods","handleUpload","accessToken","getAccessToken","dataToUpload","post","query","JSON","stringify","$message","success","queryCloudDatabase","error","console","handleSizeChange","val","limit","handlePageChange","page","response","get","params","grant_type","appid","secret","access_token","handleUploadSuccess","imageUrl","submitEdit","dataToUpdate","_id","handleEdit","item","handleDelete","id","totalQuery","dataRes","countRes","Promise","all","newData","map","parse","count","mounted","setInterval","catch","beforeUnmount","clearInterval"],"sources":["C:\\Users\\Administrator\\Desktop\\小程序后台\\coffeeshop\\src\\components\\order\\categories.vue"],"sourcesContent":["<template>\r\n    <div id=\"container\">\r\n        categoriesList\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nconst axios = require('axios');\r\n// 配置常量\r\nconst CONFIG = {\r\n    appId: 'wx6872b1e938e23c07',\r\n    appSecret: 'bb0342f524bf2fe87416defe5797f40a',\r\n    env: 'cloud1-6gzxjy5k59c1f367'\r\n};\r\n\r\nexport default {\r\n    name: 'goodsCategoriesList',\r\n    data() {\r\n        return {\r\n            dialogVisible: false,\r\n            editForm: {\r\n                good: '',\r\n                name: '',\r\n                price: '',\r\n                category: '',\r\n                image: ''\r\n            },\r\n            queryParam: {\r\n            },\r\n            total: 0,\r\n            goodsData: [],\r\n            timer: null,\r\n        };\r\n    },\r\n    methods: {\r\n        // 将数据上传到微信云数据库\r\n        async handleUpload() {\r\n            try {\r\n                const accessToken = await this.getAccessToken();\r\n                const dataToUpload = {\r\n                    good: this.queryParam.good,\r\n                    name: this.queryParam.name,\r\n                    price: this.queryParam.price,\r\n                    category: this.queryParam.category,\r\n                    image: this.queryParam.image\r\n                };\r\n                // 由于 response 变量声明后未使用，直接执行请求，不保存响应结果\r\n                await axios.post(\r\n                    `/wechat-api/tcb/databaseadd?access_token=${accessToken}`,\r\n                    {\r\n                        env: CONFIG.env,\r\n                        query: `db.collection('goods').add({ data: ${JSON.stringify(dataToUpload)} })`\r\n                    }\r\n                );\r\n                this.$message.success('数据上传成功');\r\n                this.queryCloudDatabase();\r\n            } catch (error) {\r\n                console.error('数据上传失败:', error);\r\n                this.$message.error('数据上传失败，请重试');\r\n            }\r\n        },\r\n\r\n        handleSizeChange(val) {\r\n            this.queryParam.limit = val\r\n            this.queryCloudDatabase()\r\n        },\r\n        handlePageChange(val) {\r\n            this.queryParam.page = val\r\n            this.queryCloudDatabase()\r\n        },\r\n        // 获取微信访问令牌\r\n        async getAccessToken() {\r\n            try {\r\n                const response = await axios.get('/cgi-bin/token', {\r\n                    params: {\r\n                        grant_type: 'client_credential',\r\n                        appid: CONFIG.appId,\r\n                        secret: CONFIG.appSecret\r\n                    }\r\n                });\r\n                return response.data.access_token;\r\n            } catch (error) {\r\n                console.error('获取访问令牌失败:', error);\r\n                throw error;\r\n            }\r\n        },\r\n\r\n        handleUploadSuccess(response) {\r\n            this.queryParam.image = response.imageUrl;\r\n            this.$message.success('图片上传成功');\r\n        },\r\n\r\n        // 提交编辑信息\r\n        async submitEdit() {\r\n            try {\r\n                const accessToken = await this.getAccessToken();\r\n                const dataToUpdate = {\r\n                    good: this.editForm.good,\r\n                    name: this.editForm.name,\r\n                    price: this.editForm.price,\r\n                    category: this.editForm.category,\r\n                    image: this.editForm.image\r\n                };\r\n                await axios.post(\r\n                    `/wechat-api/tcb/databaseupdate?access_token=${accessToken}`,\r\n                    {\r\n                        env: CONFIG.env,\r\n                        query: `db.collection('goods').doc('${this.editForm._id}').update({ data: ${JSON.stringify(dataToUpdate)} })`\r\n                    }\r\n                );\r\n                this.$message.success('商品信息编辑成功');\r\n                this.dialogVisible = false;\r\n                this.queryCloudDatabase();\r\n            } catch (error) {\r\n                console.error('商品信息编辑失败:', error);\r\n                this.$message.error('商品信息编辑失败，请重试');\r\n            }\r\n        },\r\n\r\n        // 编辑商品信息并上传到云数据库\r\n        async handleEdit(item) {\r\n            this.editForm = {\r\n                _id: item._id,\r\n                good: item.good,\r\n                name: item.name,\r\n                price: item.price,\r\n                category: item.category,\r\n                image: item.image\r\n            };\r\n            this.dialogVisible = true;\r\n            try {\r\n                const accessToken = await this.getAccessToken();\r\n                const dataToUpdate = {\r\n                    good: item.good,\r\n                    name: item.name,\r\n                    price: item.price,\r\n                    category: item.category,\r\n                    image: item.image\r\n                };\r\n                await axios.post(\r\n                    `/wechat-api/tcb/databaseupdate?access_token=${accessToken}`,\r\n                    {\r\n                        env: CONFIG.env,\r\n                        query: `db.collection('goods').doc('${item._id}').update({ data: ${JSON.stringify(dataToUpdate)} })`\r\n                    });\r\n                this.queryCloudDatabase();\r\n            } catch (error) {\r\n                console.error('商品信息编辑失败:', error);\r\n                this.$message.error('商品信息编辑失败，请重试');\r\n            }\r\n        },\r\n\r\n        // 删除商品信息\r\n        async handleDelete(id) {\r\n            try {\r\n                const accessToken = await this.getAccessToken();\r\n                await axios.post(\r\n                    `/wechat-api/tcb/databasedelete?access_token=${accessToken}`,\r\n                    {\r\n                        env: CONFIG.env,\r\n                        query: `db.collection('goods').doc('${id}').remove()`\r\n                    }\r\n                );\r\n                this.$message.success('商品删除成功');\r\n                this.queryCloudDatabase();\r\n            } catch (error) {\r\n                console.error('商品删除失败:', error);\r\n                this.$message.error('商品删除失败，请重试');\r\n            }\r\n        },\r\n\r\n        // 查询云数据库\r\n        async queryCloudDatabase() {\r\n            try {\r\n                const accessToken = await this.getAccessToken();\r\n                const query = {\r\n                    env: CONFIG.env,\r\n                    query: `db.collection('goods').skip(${(this.queryParam.page - 1) * this.queryParam.limit}).limit(${this.queryParam.limit}).get()`,\r\n                    totalQuery: \"db.collection('goods').count()\"\r\n                };\r\n                const response = await axios.post(\r\n                    `/wechat-api/tcb/databasequery?access_token=${accessToken}`,\r\n                    query\r\n                );\r\n                const [dataRes, countRes] = await Promise.all([\r\n                    axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, { env: CONFIG.env, query: query.query }),\r\n                    axios.post(`/wechat-api/tcb/databasecount?access_token=${accessToken}`, { env: CONFIG.env, query: query.totalQuery })\r\n                ]);\r\n                const newData = dataRes.data.data.map(item => JSON.parse(item));\r\n                if (JSON.stringify(newData) !== JSON.stringify(this.goodsData)) {\r\n                    this.goodsData = newData;\r\n                    this.total = countRes.data.count;\r\n                }\r\n                return response.data;\r\n            } catch (error) {\r\n                console.error('查询云数据库失败:', error);\r\n                throw error;\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        // 首次加载数据\r\n        this.queryCloudDatabase();\r\n        // 启动定时器（每5秒请求一次）\r\n        this.timer = setInterval(() => {\r\n            this.queryCloudDatabase().catch(() => { });\r\n        }, 10000);\r\n    },\r\n    beforeUnmount() {\r\n        // 组件卸载时清除定时器\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n            this.timer = null;\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n<style scoped></style>"],"mappings":";;AASA,MAAMA,KAAI,GAAIC,OAAO,CAAC,OAAO,CAAC;AAC9B;AACA,MAAMC,MAAK,GAAI;EACXC,KAAK,EAAE,oBAAoB;EAC3BC,SAAS,EAAE,kCAAkC;EAC7CC,GAAG,EAAE;AACT,CAAC;AAED,eAAe;EACXC,IAAI,EAAE,qBAAqB;EAC3BC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,aAAa,EAAE,KAAK;MACpBC,QAAQ,EAAE;QACNC,IAAI,EAAE,EAAE;QACRJ,IAAI,EAAE,EAAE;QACRK,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE;MACX,CAAC;MACDC,UAAU,EAAE,CACZ,CAAC;MACDC,KAAK,EAAE,CAAC;MACRC,SAAS,EAAE,EAAE;MACbC,KAAK,EAAE;IACX,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL;IACA,MAAMC,YAAYA,CAAA,EAAG;MACjB,IAAI;QACA,MAAMC,WAAU,GAAI,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;QAC/C,MAAMC,YAAW,GAAI;UACjBZ,IAAI,EAAE,IAAI,CAACI,UAAU,CAACJ,IAAI;UAC1BJ,IAAI,EAAE,IAAI,CAACQ,UAAU,CAACR,IAAI;UAC1BK,KAAK,EAAE,IAAI,CAACG,UAAU,CAACH,KAAK;UAC5BC,QAAQ,EAAE,IAAI,CAACE,UAAU,CAACF,QAAQ;UAClCC,KAAK,EAAE,IAAI,CAACC,UAAU,CAACD;QAC3B,CAAC;QACD;QACA,MAAMb,KAAK,CAACuB,IAAI,CACZ,4CAA4CH,WAAW,EAAE,EACzD;UACIf,GAAG,EAAEH,MAAM,CAACG,GAAG;UACfmB,KAAK,EAAE,sCAAsCC,IAAI,CAACC,SAAS,CAACJ,YAAY,CAAC;QAC7E,CACJ,CAAC;QACD,IAAI,CAACK,QAAQ,CAACC,OAAO,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAACC,kBAAkB,CAAC,CAAC;MAC7B,EAAE,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/B,IAAI,CAACH,QAAQ,CAACG,KAAK,CAAC,YAAY,CAAC;MACrC;IACJ,CAAC;IAEDE,gBAAgBA,CAACC,GAAG,EAAE;MAClB,IAAI,CAACnB,UAAU,CAACoB,KAAI,GAAID,GAAE;MAC1B,IAAI,CAACJ,kBAAkB,CAAC;IAC5B,CAAC;IACDM,gBAAgBA,CAACF,GAAG,EAAE;MAClB,IAAI,CAACnB,UAAU,CAACsB,IAAG,GAAIH,GAAE;MACzB,IAAI,CAACJ,kBAAkB,CAAC;IAC5B,CAAC;IACD;IACA,MAAMR,cAAcA,CAAA,EAAG;MACnB,IAAI;QACA,MAAMgB,QAAO,GAAI,MAAMrC,KAAK,CAACsC,GAAG,CAAC,gBAAgB,EAAE;UAC/CC,MAAM,EAAE;YACJC,UAAU,EAAE,mBAAmB;YAC/BC,KAAK,EAAEvC,MAAM,CAACC,KAAK;YACnBuC,MAAM,EAAExC,MAAM,CAACE;UACnB;QACJ,CAAC,CAAC;QACF,OAAOiC,QAAQ,CAAC9B,IAAI,CAACoC,YAAY;MACrC,EAAE,OAAOb,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC,MAAMA,KAAK;MACf;IACJ,CAAC;IAEDc,mBAAmBA,CAACP,QAAQ,EAAE;MAC1B,IAAI,CAACvB,UAAU,CAACD,KAAI,GAAIwB,QAAQ,CAACQ,QAAQ;MACzC,IAAI,CAAClB,QAAQ,CAACC,OAAO,CAAC,QAAQ,CAAC;IACnC,CAAC;IAED;IACA,MAAMkB,UAAUA,CAAA,EAAG;MACf,IAAI;QACA,MAAM1B,WAAU,GAAI,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;QAC/C,MAAM0B,YAAW,GAAI;UACjBrC,IAAI,EAAE,IAAI,CAACD,QAAQ,CAACC,IAAI;UACxBJ,IAAI,EAAE,IAAI,CAACG,QAAQ,CAACH,IAAI;UACxBK,KAAK,EAAE,IAAI,CAACF,QAAQ,CAACE,KAAK;UAC1BC,QAAQ,EAAE,IAAI,CAACH,QAAQ,CAACG,QAAQ;UAChCC,KAAK,EAAE,IAAI,CAACJ,QAAQ,CAACI;QACzB,CAAC;QACD,MAAMb,KAAK,CAACuB,IAAI,CACZ,+CAA+CH,WAAW,EAAE,EAC5D;UACIf,GAAG,EAAEH,MAAM,CAACG,GAAG;UACfmB,KAAK,EAAE,+BAA+B,IAAI,CAACf,QAAQ,CAACuC,GAAG,qBAAqBvB,IAAI,CAACC,SAAS,CAACqB,YAAY,CAAC;QAC5G,CACJ,CAAC;QACD,IAAI,CAACpB,QAAQ,CAACC,OAAO,CAAC,UAAU,CAAC;QACjC,IAAI,CAACpB,aAAY,GAAI,KAAK;QAC1B,IAAI,CAACqB,kBAAkB,CAAC,CAAC;MAC7B,EAAE,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC,IAAI,CAACH,QAAQ,CAACG,KAAK,CAAC,cAAc,CAAC;MACvC;IACJ,CAAC;IAED;IACA,MAAMmB,UAAUA,CAACC,IAAI,EAAE;MACnB,IAAI,CAACzC,QAAO,GAAI;QACZuC,GAAG,EAAEE,IAAI,CAACF,GAAG;QACbtC,IAAI,EAAEwC,IAAI,CAACxC,IAAI;QACfJ,IAAI,EAAE4C,IAAI,CAAC5C,IAAI;QACfK,KAAK,EAAEuC,IAAI,CAACvC,KAAK;QACjBC,QAAQ,EAAEsC,IAAI,CAACtC,QAAQ;QACvBC,KAAK,EAAEqC,IAAI,CAACrC;MAChB,CAAC;MACD,IAAI,CAACL,aAAY,GAAI,IAAI;MACzB,IAAI;QACA,MAAMY,WAAU,GAAI,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;QAC/C,MAAM0B,YAAW,GAAI;UACjBrC,IAAI,EAAEwC,IAAI,CAACxC,IAAI;UACfJ,IAAI,EAAE4C,IAAI,CAAC5C,IAAI;UACfK,KAAK,EAAEuC,IAAI,CAACvC,KAAK;UACjBC,QAAQ,EAAEsC,IAAI,CAACtC,QAAQ;UACvBC,KAAK,EAAEqC,IAAI,CAACrC;QAChB,CAAC;QACD,MAAMb,KAAK,CAACuB,IAAI,CACZ,+CAA+CH,WAAW,EAAE,EAC5D;UACIf,GAAG,EAAEH,MAAM,CAACG,GAAG;UACfmB,KAAK,EAAE,+BAA+B0B,IAAI,CAACF,GAAG,qBAAqBvB,IAAI,CAACC,SAAS,CAACqB,YAAY,CAAC;QACnG,CAAC,CAAC;QACN,IAAI,CAAClB,kBAAkB,CAAC,CAAC;MAC7B,EAAE,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC,IAAI,CAACH,QAAQ,CAACG,KAAK,CAAC,cAAc,CAAC;MACvC;IACJ,CAAC;IAED;IACA,MAAMqB,YAAYA,CAACC,EAAE,EAAE;MACnB,IAAI;QACA,MAAMhC,WAAU,GAAI,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;QAC/C,MAAMrB,KAAK,CAACuB,IAAI,CACZ,+CAA+CH,WAAW,EAAE,EAC5D;UACIf,GAAG,EAAEH,MAAM,CAACG,GAAG;UACfmB,KAAK,EAAE,+BAA+B4B,EAAE;QAC5C,CACJ,CAAC;QACD,IAAI,CAACzB,QAAQ,CAACC,OAAO,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAACC,kBAAkB,CAAC,CAAC;MAC7B,EAAE,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/B,IAAI,CAACH,QAAQ,CAACG,KAAK,CAAC,YAAY,CAAC;MACrC;IACJ,CAAC;IAED;IACA,MAAMD,kBAAkBA,CAAA,EAAG;MACvB,IAAI;QACA,MAAMT,WAAU,GAAI,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;QAC/C,MAAMG,KAAI,GAAI;UACVnB,GAAG,EAAEH,MAAM,CAACG,GAAG;UACfmB,KAAK,EAAE,+BAA+B,CAAC,IAAI,CAACV,UAAU,CAACsB,IAAG,GAAI,CAAC,IAAI,IAAI,CAACtB,UAAU,CAACoB,KAAK,WAAW,IAAI,CAACpB,UAAU,CAACoB,KAAK,SAAS;UACjImB,UAAU,EAAE;QAChB,CAAC;QACD,MAAMhB,QAAO,GAAI,MAAMrC,KAAK,CAACuB,IAAI,CAC7B,8CAA8CH,WAAW,EAAE,EAC3DI,KACJ,CAAC;QACD,MAAM,CAAC8B,OAAO,EAAEC,QAAQ,IAAI,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC1CzD,KAAK,CAACuB,IAAI,CAAC,8CAA8CH,WAAW,EAAE,EAAE;UAAEf,GAAG,EAAEH,MAAM,CAACG,GAAG;UAAEmB,KAAK,EAAEA,KAAK,CAACA;QAAM,CAAC,CAAC,EAChHxB,KAAK,CAACuB,IAAI,CAAC,8CAA8CH,WAAW,EAAE,EAAE;UAAEf,GAAG,EAAEH,MAAM,CAACG,GAAG;UAAEmB,KAAK,EAAEA,KAAK,CAAC6B;QAAW,CAAC,EACvH,CAAC;QACF,MAAMK,OAAM,GAAIJ,OAAO,CAAC/C,IAAI,CAACA,IAAI,CAACoD,GAAG,CAACT,IAAG,IAAKzB,IAAI,CAACmC,KAAK,CAACV,IAAI,CAAC,CAAC;QAC/D,IAAIzB,IAAI,CAACC,SAAS,CAACgC,OAAO,MAAMjC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACV,SAAS,CAAC,EAAE;UAC5D,IAAI,CAACA,SAAQ,GAAI0C,OAAO;UACxB,IAAI,CAAC3C,KAAI,GAAIwC,QAAQ,CAAChD,IAAI,CAACsD,KAAK;QACpC;QACA,OAAOxB,QAAQ,CAAC9B,IAAI;MACxB,EAAE,OAAOuB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC,MAAMA,KAAK;MACf;IACJ;EACJ,CAAC;EACDgC,OAAOA,CAAA,EAAG;IACN;IACA,IAAI,CAACjC,kBAAkB,CAAC,CAAC;IACzB;IACA,IAAI,CAACZ,KAAI,GAAI8C,WAAW,CAAC,MAAM;MAC3B,IAAI,CAAClC,kBAAkB,CAAC,CAAC,CAACmC,KAAK,CAAC,MAAM,CAAE,CAAC,CAAC;IAC9C,CAAC,EAAE,KAAK,CAAC;EACb,CAAC;EACDC,aAAaA,CAAA,EAAG;IACZ;IACA,IAAI,IAAI,CAAChD,KAAK,EAAE;MACZiD,aAAa,CAAC,IAAI,CAACjD,KAAK,CAAC;MACzB,IAAI,CAACA,KAAI,GAAI,IAAI;IACrB;EACJ;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}