{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nconst axios = require('axios');\n// 配置常量\nconst CONFIG = {\n  appId: 'wx6872b1e938e23c07',\n  appSecret: 'bb0342f524bf2fe87416defe5797f40a',\n  env: 'cloud1-6gzxjy5k59c1f367'\n};\nexport default {\n  name: 'goodsList',\n  data() {\n    return {\n      queryParam: {\n        page: 1,\n        limit: 10,\n        good: '',\n        // 商品ID\n        name: '',\n        // 商品名称\n        price: '',\n        // 价格\n        category: '',\n        // 分类\n        image: '' // 图片\n      },\n      total: 0,\n      goodsData: [],\n      timer: null\n    };\n  },\n  methods: {\n    handleSizeChange(val) {\n      this.queryParam.limit = val;\n      this.queryCloudDatabase();\n    },\n    handlePageChange(val) {\n      this.queryParam.page = val;\n      this.queryCloudDatabase();\n    },\n    // 获取微信访问令牌\n    async getAccessToken() {\n      try {\n        const response = await axios.get('/cgi-bin/token', {\n          params: {\n            grant_type: 'client_credential',\n            appid: CONFIG.appId,\n            secret: CONFIG.appSecret\n          }\n        });\n        return response.data.access_token;\n      } catch (error) {\n        console.error('获取访问令牌失败:', error);\n        throw error;\n      }\n    },\n    handleUploadSuccess(response) {\n      this.queryParam.image = response.imageUrl;\n      this.$message.success('图片上传成功');\n    },\n    // 查询云数据库\n    async queryCloudDatabase() {\n      try {\n        const accessToken = await this.getAccessToken();\n        const query = {\n          env: CONFIG.env,\n          query: `db.collection('goods').skip(${(this.queryParam.page - 1) * this.queryParam.limit}).limit(${this.queryParam.limit}).get()`,\n          totalQuery: \"db.collection('goods').count()\"\n        };\n        const response = await axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, query);\n        const [dataRes, countRes] = await Promise.all([axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: query.query\n        }), axios.post(`/wechat-api/tcb/databasecount?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: query.totalQuery\n        })]);\n        const newData = dataRes.data.data.map(item => JSON.parse(item));\n        if (JSON.stringify(newData) !== JSON.stringify(this.goodsData)) {\n          this.goodsData = newData;\n          this.total = countRes.data.count;\n        }\n        return response.data;\n      } catch (error) {\n        console.error('查询云数据库失败:', error);\n        throw error;\n      }\n    }\n  },\n  mounted() {\n    // 首次加载数据\n    this.queryCloudDatabase();\n    // 启动定时器（每5秒请求一次）\n    this.timer = setInterval(() => {\n      this.queryCloudDatabase().catch(() => {});\n    }, 10000);\n  },\n  beforeUnmount() {\n    // 组件卸载时清除定时器\n    if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","require","CONFIG","appId","appSecret","env","name","data","queryParam","page","limit","good","price","category","image","total","goodsData","timer","methods","handleSizeChange","val","queryCloudDatabase","handlePageChange","getAccessToken","response","get","params","grant_type","appid","secret","access_token","error","console","handleUploadSuccess","imageUrl","$message","success","accessToken","query","totalQuery","post","dataRes","countRes","Promise","all","newData","map","item","JSON","parse","stringify","count","mounted","setInterval","catch","beforeUnmount","clearInterval"],"sources":["C:\\Users\\Administrator\\Desktop\\小程序后台\\coffeeshop\\src\\components\\order\\goods.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div>物品上传</div>\r\n        <el-container class=\"content-row\">\r\n\r\n            <div class=\"input-tip\">\r\n                商品ID:\r\n            </div>\r\n            <div class=\"input-field\">\r\n                <el-input v-model=\"queryParam.good\"></el-input>\r\n            </div>\r\n            <div class=\"input-tip\">\r\n                商品名称:\r\n            </div>\r\n            <div class=\"input-field\">\r\n                <el-input v-model=\"queryParam.name\"></el-input>\r\n            </div>\r\n\r\n\r\n        </el-container>\r\n\r\n        <el-container class=\"content-row\">\r\n            <div class=\"input-tip\">\r\n                价格:\r\n            </div>\r\n            <div class=\"input-field\">\r\n                <el-input v-model=\"queryParam.price\"></el-input>\r\n            </div>\r\n            <div class=\"input-tip\">\r\n                分类:\r\n            </div>\r\n            <div class=\"input-field\">\r\n                <el-input v-model=\"queryParam.category\"></el-input>\r\n            </div>\r\n        </el-container>\r\n\r\n        <!-- 图片并展示出图片 -->\r\n        <el-container class=\"content-row\">\r\n            <div class=\"input-tip\">\r\n                图片:\r\n            </div>\r\n            <div class=\"input-field\">\r\n                <el-upload action=\"/cgi-bin/media/upload\" :data=\"queryParam.image\" :on-success=\"handleUploadSuccess\"\r\n                    :on-error=\"handleUploadError\" :on-progress=\"handleUploadProgress\">\r\n                    <el-button type=\"primary\">点击上传</el-button>\r\n                </el-upload>\r\n            </div>\r\n            <!-- 将打开的图片显示 -->\r\n            <div class=\"input-field\">\r\n                <img v-if=\"queryParam.image\" :src=\"queryParam.image\" style=\"width: 100px; height: 100px;\">\r\n            </div>\r\n        </el-container>\r\n\r\n        <!-- 上传按钮 -->\r\n        <el-container class=\"content-row\">\r\n            <div class=\"input-tip\">\r\n            </div>\r\n            <div class=\"input-field\">\r\n                <el-button type=\"primary\" @click=\"handleUpload\">上传后台数据库</el-button>\r\n            </div>\r\n        </el-container>\r\n\r\n    </div>\r\n\r\n\r\n    <div>\r\n        <table v-if=\"goodsData.length > 0\">\r\n            <thead>\r\n                <tr>\r\n                    <th>商品ID</th>\r\n                    <th>商品名称</th>\r\n                    <th>价格</th>\r\n                    <th>分类</th>\r\n                    <th>图片</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"(item, index) in goodsData\" :key=\"index\">\r\n                    <td>{{ item._id }}</td>\r\n                    <td>{{ item.name }}</td>\r\n                    <td>{{ item.price }}</td>\r\n                    <td>{{ item.category }}</td>\r\n                    <td>\r\n                        <img :src=\"item.image\" style=\"width: 100px; height: 100px;\">\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <el-pagination background :page-sizes=\"[10, 20, 50]\" :current-page=\"queryParam.page\"\r\n            :page-size=\"queryParam.limit\" layout=\"total, sizes, prev, pager, next\" :total=\"total\"\r\n            @size-change=\"handleSizeChange\" @current-change=\"handlePageChange\" />\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nconst axios = require('axios');\r\n// 配置常量\r\nconst CONFIG = {\r\n    appId: 'wx6872b1e938e23c07',\r\n    appSecret: 'bb0342f524bf2fe87416defe5797f40a',\r\n    env: 'cloud1-6gzxjy5k59c1f367'\r\n};\r\n\r\nexport default {\r\n    name: 'goodsList',\r\n    data() {\r\n        return {\r\n            queryParam: {\r\n                page: 1,\r\n                limit: 10,\r\n\r\n                good: '', // 商品ID\r\n                name: '', // 商品名称\r\n                price: '', // 价格\r\n                category: '', // 分类\r\n                image: '', // 图片\r\n                \r\n            },\r\n            total: 0,\r\n            goodsData: [],\r\n            timer: null,\r\n        };\r\n    },\r\n    methods: {\r\n        handleSizeChange(val) {\r\n            this.queryParam.limit = val\r\n            this.queryCloudDatabase()\r\n        },\r\n        handlePageChange(val) {\r\n            this.queryParam.page = val\r\n            this.queryCloudDatabase()\r\n        },\r\n        // 获取微信访问令牌\r\n        async getAccessToken() {\r\n            try {\r\n                const response = await axios.get('/cgi-bin/token', {\r\n                    params: {\r\n                        grant_type: 'client_credential',\r\n                        appid: CONFIG.appId,\r\n                        secret: CONFIG.appSecret\r\n                    }\r\n                });\r\n                return response.data.access_token;\r\n            } catch (error) {\r\n                console.error('获取访问令牌失败:', error);\r\n                throw error;\r\n            }\r\n        },\r\n\r\n        handleUploadSuccess(response) {\r\n            this.queryParam.image = response.imageUrl;\r\n            this.$message.success('图片上传成功');\r\n        },\r\n\r\n        // 查询云数据库\r\n        async queryCloudDatabase() {\r\n            try {\r\n                const accessToken = await this.getAccessToken();\r\n                const query = {\r\n                    env: CONFIG.env,\r\n                    query: `db.collection('goods').skip(${(this.queryParam.page - 1) * this.queryParam.limit}).limit(${this.queryParam.limit}).get()`,\r\n                    totalQuery: \"db.collection('goods').count()\"\r\n                };\r\n                const response = await axios.post(\r\n                    `/wechat-api/tcb/databasequery?access_token=${accessToken}`,\r\n                    query\r\n                );\r\n                const [dataRes, countRes] = await Promise.all([\r\n                    axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, { env: CONFIG.env, query: query.query }),\r\n                    axios.post(`/wechat-api/tcb/databasecount?access_token=${accessToken}`, { env: CONFIG.env, query: query.totalQuery })\r\n                ]);\r\n                const newData = dataRes.data.data.map(item => JSON.parse(item));\r\n                if (JSON.stringify(newData) !== JSON.stringify(this.goodsData)) {\r\n                    this.goodsData = newData;\r\n                    this.total = countRes.data.count;\r\n                }\r\n                return response.data;\r\n            } catch (error) {\r\n                console.error('查询云数据库失败:', error);\r\n                throw error;\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        // 首次加载数据\r\n        this.queryCloudDatabase();\r\n        // 启动定时器（每5秒请求一次）\r\n        this.timer = setInterval(() => {\r\n            this.queryCloudDatabase().catch(() => { });\r\n        }, 10000);\r\n    },\r\n    beforeUnmount() {\r\n        // 组件卸载时清除定时器\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n            this.timer = null;\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n<style scoped>\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n}\r\n\r\nth,\r\ntd {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n    text-align: left;\r\n}\r\n\r\nth {\r\n    background-color: #f2f2f2;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}