{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 表格展示 \"), _createCommentVNode(\" <div>\\r\\n            <table v-if=\\\"goodsData.length > 0\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>分类ID</th>\\r\\n                        <th>分类名称</th>\\r\\n                        <th>编辑/删除</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr v-for=\\\"(item, index) in goodsData\\\" :key=\\\"index\\\">\\r\\n                        <td>{{ item._id }}</td>\\r\\n                        <td>{{ item.name }}</td>\\r\\n                        <td>\\r\\n                            <div style=\\\"display: flex; flex-direction: column; gap: 8px;\\\">\\r\\n                                <el-button type=\\\"primary\\\" @click=\\\"handleEdit(item)\\\" style=\\\"width: 100px;\\\">编辑</el-button>\\r\\n                                <el-button type=\\\"danger\\\" @click=\\\"handleDelete(item._id)\\\"\\r\\n                                    style=\\\"width: 100px; margin-left: 0px;\\\">删除</el-button>\\r\\n                            </div>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n            <el-pagination background :page-sizes=\\\"[10, 20, 50]\\\" :current-page=\\\"queryParam.page\\\"\\r\\n                :page-size=\\\"queryParam.limit\\\" layout=\\\"total, sizes, prev, pager, next\\\" :total=\\\"total\\\"\\r\\n                @size-change=\\\"handleSizeChange\\\" @current-change=\\\"handlePageChange\\\" />\\r\\n        </div> \")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createCommentVNode"],"sources":["C:\\Users\\Administrator\\Desktop\\小程序后台\\coffeeshop\\src\\components\\order\\categories.vue"],"sourcesContent":["<template>\r\n\r\n\r\n        <!-- 表格展示 -->\r\n        <!-- <div>\r\n            <table v-if=\"goodsData.length > 0\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>分类ID</th>\r\n                        <th>分类名称</th>\r\n                        <th>编辑/删除</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"(item, index) in goodsData\" :key=\"index\">\r\n                        <td>{{ item._id }}</td>\r\n                        <td>{{ item.name }}</td>\r\n                        <td>\r\n                            <div style=\"display: flex; flex-direction: column; gap: 8px;\">\r\n                                <el-button type=\"primary\" @click=\"handleEdit(item)\" style=\"width: 100px;\">编辑</el-button>\r\n                                <el-button type=\"danger\" @click=\"handleDelete(item._id)\"\r\n                                    style=\"width: 100px; margin-left: 0px;\">删除</el-button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <el-pagination background :page-sizes=\"[10, 20, 50]\" :current-page=\"queryParam.page\"\r\n                :page-size=\"queryParam.limit\" layout=\"total, sizes, prev, pager, next\" :total=\"total\"\r\n                @size-change=\"handleSizeChange\" @current-change=\"handlePageChange\" />\r\n        </div> -->\r\n\r\n</template>\r\n\r\n\r\n<script>\r\nconst axios = require('axios');\r\nconst CONFIG = {\r\n    appId: 'wx6872b1e938e23c07',\r\n    appSecret: 'bb0342f524bf2fe87416defe5797f40a',\r\n    env: 'cloud1-6gzxjy5k59c1f367'\r\n};\r\nexport default {\r\n    name: 'goodsCategoriesList',\r\n    data() {\r\n        return {\r\n            goodsData: [], // 存储商品数据的数组\r\n        };\r\n    },\r\n    methods: {\r\n        // 将数据上传到微信云数据库\r\n        // 获取微信访问令牌\r\n        async getAccessToken() {\r\n            try {\r\n                const response = await axios.get('/cgi-bin/token', {\r\n                    params: {\r\n                        grant_type: 'client_credential',\r\n                        appid: CONFIG.appId,\r\n                        secret: CONFIG.appSecret\r\n                    }\r\n                });\r\n                return response.data.access_token;\r\n            } catch (error) {\r\n                console.error('获取访问令牌失败:', error);\r\n                throw error;\r\n            }\r\n        },\r\n\r\n\r\n        // 查询云数据库\r\n        async queryCloudDatabase() {\r\n            try {\r\n                const accessToken = await this.getAccessToken();\r\n                const query = {\r\n                    env: CONFIG.env,\r\n                    query: `db.collection('categories').get()`,\r\n                };\r\n                const response = await axios.post(\r\n                    `/wechat-api/tcb/databasequery?access_token=${accessToken}`,\r\n                    query\r\n                );\r\n                const [dataRes, countRes] = await Promise.all([\r\n                    axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, { env: CONFIG.env, query: query.query }),\r\n                    axios.post(`/wechat-api/tcb/databasecount?access_token=${accessToken}`, { env: CONFIG.env, query: query.totalQuery })\r\n                ]);\r\n                const newData = dataRes.data.data.map(item => JSON.parse(item));\r\n                if (JSON.stringify(newData) !== JSON.stringify(this.goodsData)) {\r\n                    this.goodsData = newData;\r\n                    this.total = countRes.data.count;\r\n                }\r\n                return response.data;\r\n            } catch (error) {\r\n                console.error('查询云数据库失败:', error);\r\n                throw error;\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        // 首次加载数据\r\n        this.queryCloudDatabase();\r\n        // 启动定时器（每~秒请求一次）\r\n        this.timer = setInterval(() => {\r\n            this.queryCloudDatabase().catch(() => { });\r\n        }, 10000);\r\n    },\r\n    beforeUnmount() {\r\n        // 组件卸载时清除定时器\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n            this.timer = null;\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n<style scoped></style>\r\n"],"mappings":";;6DAGQA,mBAAA,UAAa,EACbA,mBAAA,85CA0BU,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}