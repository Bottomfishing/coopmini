{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"input-field\"\n};\nconst _hoisted_2 = {\n  class: \"input-field\"\n};\nconst _hoisted_3 = {\n  class: \"input-field\"\n};\nconst _hoisted_4 = {\n  class: \"input-field\"\n};\nconst _hoisted_5 = {\n  class: \"input-field\"\n};\nconst _hoisted_6 = {\n  class: \"input-field\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"input-field\"\n};\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = [\"src\"];\nconst _hoisted_11 = {\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"column\",\n    \"gap\": \"8px\"\n  }\n};\nconst _hoisted_12 = [\"src\"];\nconst _hoisted_13 = {\n  slot: \"footer\",\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_container = _resolveComponent(\"el-container\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_cache[17] || (_cache[17] = _createElementVNode(\"div\", null, \"物品上传\", -1 /* HOISTED */)), _createVNode(_component_el_container, {\n    class: \"content-row\"\n  }, {\n    default: _withCtx(() => [_cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n      class: \"input-tip\"\n    }, \" 商品ID: \", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_input, {\n      modelValue: _ctx.queryParam.good,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.queryParam.good = $event)\n    }, null, 8 /* PROPS */, [\"modelValue\"])]), _cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n      class: \"input-tip\"\n    }, \" 商品名称: \", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_input, {\n      modelValue: _ctx.queryParam.name,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.queryParam.name = $event)\n    }, null, 8 /* PROPS */, [\"modelValue\"])])]),\n    _: 1 /* STABLE */,\n    __: [9, 10]\n  }), _createVNode(_component_el_container, {\n    class: \"content-row\"\n  }, {\n    default: _withCtx(() => [_cache[11] || (_cache[11] = _createElementVNode(\"div\", {\n      class: \"input-tip\"\n    }, \" 价格: \", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_input, {\n      modelValue: _ctx.queryParam.price,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.queryParam.price = $event)\n    }, null, 8 /* PROPS */, [\"modelValue\"])]), _cache[12] || (_cache[12] = _createElementVNode(\"div\", {\n      class: \"input-tip\"\n    }, \" 分类: \", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_input, {\n      modelValue: _ctx.queryParam.category,\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.queryParam.category = $event)\n    }, null, 8 /* PROPS */, [\"modelValue\"])])]),\n    _: 1 /* STABLE */,\n    __: [11, 12]\n  }), _createCommentVNode(\" 图片并展示出图片 \"), _createVNode(_component_el_container, {\n    class: \"content-row\"\n  }, {\n    default: _withCtx(() => [_cache[14] || (_cache[14] = _createElementVNode(\"div\", {\n      class: \"input-tip\"\n    }, \" 图片: \", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_upload, {\n      action: \"/cgi-bin/media/upload\",\n      data: _ctx.queryParam.image,\n      \"on-success\": _ctx.handleUploadSuccess,\n      \"on-error\": _ctx.handleUploadError,\n      \"on-progress\": _ctx.handleUploadProgress\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\"\n      }, {\n        default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\"点击上传\")])),\n        _: 1 /* STABLE */,\n        __: [13]\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\", \"on-success\", \"on-error\", \"on-progress\"])]), _createCommentVNode(\" 将打开的图片显示 \"), _createElementVNode(\"div\", _hoisted_6, [_ctx.queryParam.image ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: _ctx.queryParam.image,\n      style: {\n        \"width\": \"100px\",\n        \"height\": \"100px\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_7)) : _createCommentVNode(\"v-if\", true)])]),\n    _: 1 /* STABLE */,\n    __: [14]\n  }), _createCommentVNode(\" 上传按钮 \"), _createVNode(_component_el_container, {\n    class: \"content-row\"\n  }, {\n    default: _withCtx(() => [_cache[16] || (_cache[16] = _createElementVNode(\"div\", {\n      class: \"input-tip\"\n    }, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _ctx.handleUpload\n    }, {\n      default: _withCtx(() => _cache[15] || (_cache[15] = [_createTextVNode(\"上传后台数据库\")])),\n      _: 1 /* STABLE */,\n      __: [15]\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    _: 1 /* STABLE */,\n    __: [16]\n  })]), _createElementVNode(\"div\", null, [_ctx.goodsData.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_9, [_cache[20] || (_cache[20] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"商品ID\"), _createElementVNode(\"th\", null, \"商品名称\"), _createElementVNode(\"th\", null, \"价格\"), _createElementVNode(\"th\", null, \"分类\"), _createElementVNode(\"th\", null, \"图片\"), _createCommentVNode(\" 编辑和删除功能 \"), _createElementVNode(\"th\", null, \"编辑/删除\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.goodsData, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(item._id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.price), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.category), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"img\", {\n      src: item.image,\n      style: {\n        \"width\": \"100px\",\n        \"height\": \"100px\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_10)]), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", _hoisted_11, [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $event => _ctx.showEditDialog(item),\n      style: {\n        \"width\": \"100px\"\n      }\n    }, {\n      default: _withCtx(() => [...(_cache[18] || (_cache[18] = [_createTextVNode(\"编辑\")]))]),\n      _: 2 /* DYNAMIC */,\n      __: [18]\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n      type: \"danger\",\n      onClick: $event => _ctx.handleDelete(item._id),\n      style: {\n        \"width\": \"100px\",\n        \"margin-left\": \"0px\"\n      }\n    }, {\n      default: _withCtx(() => [...(_cache[19] || (_cache[19] = [_createTextVNode(\"删除\")]))]),\n      _: 2 /* DYNAMIC */,\n      __: [19]\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_pagination, {\n    background: \"\",\n    \"page-sizes\": [10, 20, 50],\n    \"current-page\": _ctx.queryParam.page,\n    \"page-size\": _ctx.queryParam.limit,\n    layout: \"total, sizes, prev, pager, next\",\n    total: _ctx.total,\n    onSizeChange: _ctx.handleSizeChange,\n    onCurrentChange: _ctx.handlePageChange\n  }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\", \"onSizeChange\", \"onCurrentChange\"])]), _createVNode(_component_el_dialog, {\n    title: \"编辑商品信息\",\n    visible: _ctx.editDialogVisible,\n    width: \"50%\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: _ctx.editForm,\n      \"label-width\": \"100px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"商品ID\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: _ctx.editForm.good,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.editForm.good = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"商品名称\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: _ctx.editForm.name,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.editForm.name = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"价格\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: _ctx.editForm.price,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.editForm.price = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"分类\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: _ctx.editForm.category,\n          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.editForm.category = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"图片\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"img\", {\n          src: _ctx.editForm.image,\n          style: {\n            \"width\": \"100px\",\n            \"height\": \"100px\"\n          }\n        }, null, 8 /* PROPS */, _hoisted_12)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"]), _createElementVNode(\"span\", _hoisted_13, [_createVNode(_component_el_button, {\n      onClick: _cache[8] || (_cache[8] = $event => _ctx.editDialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[21] || (_cache[21] = [_createTextVNode(\"取消\")])),\n      _: 1 /* STABLE */,\n      __: [21]\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _ctx.submitEdit\n    }, {\n      default: _withCtx(() => _cache[22] || (_cache[22] = [_createTextVNode(\"确定\")])),\n      _: 1 /* STABLE */,\n      __: [22]\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","style","slot","_createElementVNode","_createVNode","_component_el_container","_hoisted_1","_component_el_input","_ctx","queryParam","good","$event","_hoisted_2","name","_hoisted_3","price","_hoisted_4","category","_createCommentVNode","_hoisted_5","_component_el_upload","action","data","image","handleUploadSuccess","handleUploadError","handleUploadProgress","_component_el_button","type","_cache","_hoisted_6","_createElementBlock","src","_hoisted_8","onClick","handleUpload","goodsData","length","_hoisted_9","_Fragment","_renderList","item","index","key","_toDisplayString","_id","_hoisted_11","showEditDialog","handleDelete","_component_el_pagination","background","page","limit","layout","total","onSizeChange","handleSizeChange","onCurrentChange","handlePageChange","_component_el_dialog","title","visible","editDialogVisible","width","_component_el_form","model","editForm","_component_el_form_item","label","_hoisted_13","submitEdit"],"sources":["C:\\Users\\Administrator\\Desktop\\小程序后台\\coffeeshop\\src\\components\\order\\goods.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div>物品上传</div>\r\n        <el-container class=\"content-row\">\r\n\r\n            <div class=\"input-tip\">\r\n                商品ID:\r\n            </div>\r\n            <div class=\"input-field\">\r\n                <el-input v-model=\"queryParam.good\"></el-input>\r\n            </div>\r\n            <div class=\"input-tip\">\r\n                商品名称:\r\n            </div>\r\n            <div class=\"input-field\">\r\n                <el-input v-model=\"queryParam.name\"></el-input>\r\n            </div>\r\n\r\n\r\n        </el-container>\r\n\r\n        <el-container class=\"content-row\">\r\n            <div class=\"input-tip\">\r\n                价格:\r\n            </div>\r\n            <div class=\"input-field\">\r\n                <el-input v-model=\"queryParam.price\"></el-input>\r\n            </div>\r\n            <div class=\"input-tip\">\r\n                分类:\r\n            </div>\r\n            <div class=\"input-field\">\r\n                <el-input v-model=\"queryParam.category\"></el-input>\r\n            </div>\r\n        </el-container>\r\n\r\n        <!-- 图片并展示出图片 -->\r\n        <el-container class=\"content-row\">\r\n            <div class=\"input-tip\">\r\n                图片:\r\n            </div>\r\n            <div class=\"input-field\">\r\n                <el-upload action=\"/cgi-bin/media/upload\" :data=\"queryParam.image\" :on-success=\"handleUploadSuccess\"\r\n                    :on-error=\"handleUploadError\" :on-progress=\"handleUploadProgress\">\r\n                    <el-button type=\"primary\">点击上传</el-button>\r\n                </el-upload>\r\n            </div>\r\n            <!-- 将打开的图片显示 -->\r\n            <div class=\"input-field\">\r\n                <img v-if=\"queryParam.image\" :src=\"queryParam.image\" style=\"width: 100px; height: 100px;\">\r\n            </div>\r\n        </el-container>\r\n\r\n        <!-- 上传按钮 -->\r\n        <el-container class=\"content-row\">\r\n            <div class=\"input-tip\">\r\n            </div>\r\n            <div class=\"input-field\">\r\n                <el-button type=\"primary\" @click=\"handleUpload\">上传后台数据库</el-button>\r\n            </div>\r\n        </el-container>\r\n\r\n    </div>\r\n\r\n\r\n    <div>\r\n        <table v-if=\"goodsData.length > 0\">\r\n            <thead>\r\n                <tr>\r\n                    <th>商品ID</th>\r\n                    <th>商品名称</th>\r\n                    <th>价格</th>\r\n                    <th>分类</th>\r\n                    <th>图片</th>\r\n                    <!-- 编辑和删除功能 -->\r\n                    <th>编辑/删除</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"(item, index) in goodsData\" :key=\"index\">\r\n                    <td>{{ item._id }}</td>\r\n                    <td>{{ item.name }}</td>\r\n                    <td>{{ item.price }}</td>\r\n                    <td>{{ item.category }}</td>\r\n                    <td>\r\n                        <img :src=\"item.image\" style=\"width: 100px; height: 100px;\">\r\n                    </td>\r\n                    <td>\r\n                        <div style=\"display: flex; flex-direction: column; gap: 8px;\">\r\n                            <el-button type=\"primary\" @click=\"showEditDialog(item)\" style=\"width: 100px;\">编辑</el-button>\r\n                            <el-button type=\"danger\" @click=\"handleDelete(item._id)\"\r\n                                style=\"width: 100px; margin-left: 0px;\">删除</el-button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <el-pagination background :page-sizes=\"[10, 20, 50]\" :current-page=\"queryParam.page\"\r\n            :page-size=\"queryParam.limit\" layout=\"total, sizes, prev, pager, next\" :total=\"total\"\r\n            @size-change=\"handleSizeChange\" @current-change=\"handlePageChange\" />\r\n    </div>\r\n    <el-dialog title=\"编辑商品信息\" :visible.sync=\"editDialogVisible\" width=\"50%\">\r\n        <el-form :model=\"editForm\" label-width=\"100px\">\r\n            <el-form-item label=\"商品ID\">\r\n                <el-input v-model=\"editForm.good\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品名称\">\r\n                <el-input v-model=\"editForm.name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"价格\">\r\n                <el-input v-model=\"editForm.price\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"分类\">\r\n                <el-input v-model=\"editForm.category\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"图片\">\r\n                <img :src=\"editForm.image\" style=\"width: 100px; height: 100px;\">\r\n            </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"editDialogVisible = false\">取消</el-button>\r\n            <el-button type=\"primary\" @click=\"submitEdit\">确定</el-button>\r\n        </span>\r\n    </el-dialog>\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nconst axios = require('axios');\r\n// 配置常量\r\nconst CONFIG = {\r\n    appId: 'wx6872b1e938e23c07',\r\n    appSecret: 'bb0342f524bf2fe87416defe5797f40a',\r\n    env: 'cloud1-6gzxjy5k59c1f367'\r\n};\r\n\r\nexport default {\r\n    name: 'goodsList',\r\n    data() {\r\n        return {\r\n            // 新增编辑弹窗显示状态\r\n            editDialogVisible: false,\r\n            // 新增编辑数据对象\r\n            editForm: {\r\n                _id: '',\r\n                good: '',\r\n                name: '',\r\n                price: '',\r\n                category: '',\r\n                image: ''\r\n            },\r\n            return {\r\n                queryParam: {\r\n                    page: 1,\r\n                    limit: 10,\r\n\r\n                    good: '', // 商品ID\r\n                    name: '', // 商品名称\r\n                    price: '', // 价格\r\n                    category: '', // 分类\r\n                    image: '', // 图片\r\n\r\n                },\r\n                total: 0,\r\n                goodsData: [],\r\n                timer: null,\r\n            };\r\n        },\r\n            methods: {\r\n        // 将数据上传到微信云数据库\r\n        async handleUpload() {\r\n                try {\r\n                    const accessToken = await this.getAccessToken();\r\n                    const dataToUpload = {\r\n                        good: this.queryParam.good,\r\n                        name: this.queryParam.name,\r\n                        price: this.queryParam.price,\r\n                        category: this.queryParam.category,\r\n                        image: this.queryParam.image\r\n                    };\r\n                    // 由于 response 变量声明后未使用，直接执行请求，不保存响应结果\r\n                    await axios.post(\r\n                        `/wechat-api/tcb/databaseadd?access_token=${accessToken}`,\r\n                        {\r\n                            env: CONFIG.env,\r\n                            query: `db.collection('goods').add({ data: ${JSON.stringify(dataToUpload)} })`\r\n                        }\r\n                    );\r\n                    this.$message.success('数据上传成功');\r\n                    this.queryCloudDatabase();\r\n                } catch (error) {\r\n                    console.error('数据上传失败:', error);\r\n                    this.$message.error('数据上传失败，请重试');\r\n                }\r\n            },\r\n\r\n            handleSizeChange(val) {\r\n                this.queryParam.limit = val\r\n                this.queryCloudDatabase()\r\n            },\r\n            handlePageChange(val) {\r\n                this.queryParam.page = val\r\n                this.queryCloudDatabase()\r\n            },\r\n        // 获取微信访问令牌\r\n        async getAccessToken() {\r\n                try {\r\n                    const response = await axios.get('/cgi-bin/token', {\r\n                        params: {\r\n                            grant_type: 'client_credential',\r\n                            appid: CONFIG.appId,\r\n                            secret: CONFIG.appSecret\r\n                        }\r\n                    });\r\n                    return response.data.access_token;\r\n                } catch (error) {\r\n                    console.error('获取访问令牌失败:', error);\r\n                    throw error;\r\n                }\r\n            },\r\n\r\n            handleUploadSuccess(response) {\r\n                this.queryParam.image = response.imageUrl;\r\n                this.$message.success('图片上传成功');\r\n            },\r\n\r\n            // 显示编辑弹窗\r\n            showEditDialog(item) {\r\n                this.editForm = { ...item };\r\n                this.editDialogVisible = true;\r\n            },\r\n\r\n        // 提交编辑数据\r\n        async submitEdit() {\r\n                try {\r\n                    const accessToken = await this.getAccessToken();\r\n                    const dataToUpdate = {\r\n                        good: this.editForm.good,\r\n                        name: this.editForm.name,\r\n                        price: this.editForm.price,\r\n                        category: this.editForm.category,\r\n                        image: this.editForm.image\r\n                    };\r\n                    await axios.post(\r\n                        `/wechat-api/tcb/databaseupdate?access_token=${accessToken}`,\r\n                        {\r\n                            env: CONFIG.env,\r\n                            query: `db.collection('goods').doc('${this.editForm._id}').update({ data: ${JSON.stringify(dataToUpdate)} })`\r\n                        }\r\n                    );\r\n                    this.$message.success('商品信息编辑成功');\r\n                    this.editDialogVisible = false;\r\n                    this.queryCloudDatabase();\r\n                } catch (error) {\r\n                    console.error('商品信息编辑失败:', error);\r\n                    this.$message.error('商品信息编辑失败，请重试');\r\n                }\r\n            },\r\n\r\n        // 编辑商品信息并上传到云数据库\r\n        async handleEdit(item) {\r\n                try {\r\n                    const accessToken = await this.getAccessToken();\r\n                    const dataToUpdate = {\r\n                        good: item.good,\r\n                        name: item.name,\r\n                        price: item.price,\r\n                        category: item.category,\r\n                        image: item.image\r\n                    };\r\n                    await axios.post(\r\n                        `/wechat-api/tcb/databaseupdate?access_token=${accessToken}`,\r\n                        {\r\n                            env: CONFIG.env,\r\n                            query: `db.collection('goods').doc('${item._id}').update({ data: ${JSON.stringify(dataToUpdate)} })`\r\n                        }\r\n                    );\r\n                    this.$message.success('商品信息编辑成功');\r\n                    this.queryCloudDatabase();\r\n                } catch (error) {\r\n                    console.error('商品信息编辑失败:', error);\r\n                    this.$message.error('商品信息编辑失败，请重试');\r\n                }\r\n            },\r\n\r\n        // 查询云数据库\r\n        async queryCloudDatabase() {\r\n                try {\r\n                    const accessToken = await this.getAccessToken();\r\n                    const query = {\r\n                        env: CONFIG.env,\r\n                        query: `db.collection('goods').skip(${(this.queryParam.page - 1) * this.queryParam.limit}).limit(${this.queryParam.limit}).get()`,\r\n                        totalQuery: \"db.collection('goods').count()\"\r\n                    };\r\n                    const response = await axios.post(\r\n                        `/wechat-api/tcb/databasequery?access_token=${accessToken}`,\r\n                        query\r\n                    );\r\n                    const [dataRes, countRes] = await Promise.all([\r\n                        axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, { env: CONFIG.env, query: query.query }),\r\n                        axios.post(`/wechat-api/tcb/databasecount?access_token=${accessToken}`, { env: CONFIG.env, query: query.totalQuery })\r\n                    ]);\r\n                    const newData = dataRes.data.data.map(item => JSON.parse(item));\r\n                    if (JSON.stringify(newData) !== JSON.stringify(this.goodsData)) {\r\n                        this.goodsData = newData;\r\n                        this.total = countRes.data.count;\r\n                    }\r\n                    return response.data;\r\n                } catch (error) {\r\n                    console.error('查询云数据库失败:', error);\r\n                    throw error;\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            // 首次加载数据\r\n            this.queryCloudDatabase();\r\n            // 启动定时器（每5秒请求一次）\r\n            this.timer = setInterval(() => {\r\n                this.queryCloudDatabase().catch(() => { });\r\n            }, 10000);\r\n        },\r\n        beforeUnmount() {\r\n            // 组件卸载时清除定时器\r\n            if (this.timer) {\r\n                clearInterval(this.timer);\r\n                this.timer = null;\r\n            }\r\n        }\r\n\r\n    }\r\n</script>\r\n<style scoped>\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n}\r\n\r\nth,\r\ntd {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n    text-align: left;\r\n}\r\n\r\nth {\r\n    background-color: #f2f2f2;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}