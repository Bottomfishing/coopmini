{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 上传物品功能 \"), _createElementVNode(\"div\", null, [_createVNode(_component_el_form, {\n    model: _ctx.form,\n    \"label-width\": \"100px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"商品名称\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: _ctx.form.name,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.form.name = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"价格\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: _ctx.form.price,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.form.price = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"分类\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: _ctx.form.category,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.form.category = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"图片\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_upload, {\n        action: \"/cgi-bin/media/upload\",\n        \"on-success\": _ctx.handleUploadSuccess,\n        \"on-error\": _ctx.handleUploadError,\n        \"auto-upload\": false\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\"\n        }, {\n          default: _withCtx(trigger => _cache[3] || (_cache[3] = [_createTextVNode(\"点击上传\")])),\n          _: 1 /* STABLE */,\n          __: [3]\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"on-success\", \"on-error\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: _ctx.uploadGoods\n  }, {\n    default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"上传商品\")])),\n    _: 1 /* STABLE */,\n    __: [4]\n  }, 8 /* PROPS */, [\"onClick\"])]), _createElementVNode(\"div\", null, [$data.goodsData.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"商品ID\"), _createElementVNode(\"th\", null, \"商品名称\"), _createElementVNode(\"th\", null, \"价格\"), _createElementVNode(\"th\", null, \"分类\"), _createElementVNode(\"th\", null, \"图片\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.goodsData, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(item._id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.price), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.category), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"img\", {\n      src: item.image,\n      style: {\n        \"width\": \"100px\",\n        \"height\": \"100px\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_2)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_pagination, {\n    background: \"\",\n    \"page-sizes\": [10, 20, 50],\n    \"current-page\": $data.queryParam.page,\n    \"page-size\": $data.queryParam.limit,\n    layout: \"total, sizes, prev, pager, next\",\n    total: $data.total,\n    onSizeChange: $options.handleSizeChange,\n    onCurrentChange: $options.handlePageChange\n  }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\", \"onSizeChange\", \"onCurrentChange\"])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createCommentVNode","_createElementVNode","_createVNode","_component_el_form","model","_ctx","form","_component_el_form_item","label","_component_el_input","name","$event","price","category","_component_el_upload","action","handleUploadSuccess","handleUploadError","_component_el_button","type","trigger","_cache","onClick","uploadGoods","$data","goodsData","length","_createElementBlock","_hoisted_1","_Fragment","_renderList","item","index","key","_toDisplayString","_id","src","image","style","_component_el_pagination","background","queryParam","page","limit","layout","total","onSizeChange","$options","handleSizeChange","onCurrentChange","handlePageChange"],"sources":["C:\\Users\\Administrator\\Desktop\\小程序后台\\coffeeshop\\src\\components\\order\\goods.vue"],"sourcesContent":["<template>\r\n\r\n    <!-- 上传物品功能 -->\r\n    <div>\r\n        <el-form :model=\"form\" label-width=\"100px\">\r\n            <el-form-item label=\"商品名称\">\r\n                <el-input v-model=\"form.name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"价格\">\r\n                <el-input v-model=\"form.price\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"分类\">\r\n                <el-input v-model=\"form.category\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"图片\">\r\n                <el-upload action=\"/cgi-bin/media/upload\" :on-success=\"handleUploadSuccess\" :on-error=\"handleUploadError\"\r\n                    :auto-upload=\"false\">\r\n                    <el-button v-slot=\"trigger\" type=\"primary\">点击上传</el-button>\r\n                </el-upload>\r\n            </el-form-item>\r\n        </el-form>\r\n        <el-button type=\"primary\" @click=\"uploadGoods\">上传商品</el-button>\r\n    </div>\r\n\r\n\r\n    <div>\r\n        <table v-if=\"goodsData.length > 0\">\r\n            <thead>\r\n                <tr>\r\n                    <th>商品ID</th>\r\n                    <th>商品名称</th>\r\n                    <th>价格</th>\r\n                    <th>分类</th>\r\n                    <th>图片</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"(item, index) in goodsData\" :key=\"index\">\r\n                    <td>{{ item._id }}</td>\r\n                    <td>{{ item.name }}</td>\r\n                    <td>{{ item.price }}</td>\r\n                    <td>{{ item.category }}</td>\r\n                    <td>\r\n                        <img :src=\"item.image\" style=\"width: 100px; height: 100px;\">\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <el-pagination background :page-sizes=\"[10, 20, 50]\" :current-page=\"queryParam.page\"\r\n            :page-size=\"queryParam.limit\" layout=\"total, sizes, prev, pager, next\" :total=\"total\"\r\n            @size-change=\"handleSizeChange\" @current-change=\"handlePageChange\" />\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nconst axios = require('axios');\r\n// 配置常量\r\nconst CONFIG = {\r\n    appId: 'wx6872b1e938e23c07',\r\n    appSecret: 'bb0342f524bf2fe87416defe5797f40a',\r\n    env: 'cloud1-6gzxjy5k59c1f367'\r\n};\r\n\r\nexport default {\r\n    name: 'goodsList',\r\n    data() {\r\n        return {\r\n            queryParam: {\r\n                page: 1,\r\n                limit: 10\r\n            },\r\n            total: 0,\r\n            goodsData: [],\r\n            timer: null,\r\n        };\r\n    },\r\n    methods: {\r\n        handleSizeChange(val) {\r\n            this.queryParam.limit = val\r\n            this.queryCloudDatabase()\r\n        },\r\n        handlePageChange(val) {\r\n            this.queryParam.page = val\r\n            this.queryCloudDatabase()\r\n        },\r\n        // 获取微信访问令牌\r\n        async getAccessToken() {\r\n            try {\r\n                const response = await axios.get('/cgi-bin/token', {\r\n                    params: {\r\n                        grant_type: 'client_credential',\r\n                        appid: CONFIG.appId,\r\n                        secret: CONFIG.appSecret\r\n                    }\r\n                });\r\n                return response.data.access_token;\r\n            } catch (error) {\r\n                console.error('获取访问令牌失败:', error);\r\n                throw error;\r\n            }\r\n        },\r\n\r\n        // 查询云数据库\r\n        async queryCloudDatabase() {\r\n            try {\r\n                const accessToken = await this.getAccessToken();\r\n                const query = {\r\n                    env: CONFIG.env,\r\n                    query: `db.collection('goods').skip(${(this.queryParam.page - 1) * this.queryParam.limit}).limit(${this.queryParam.limit}).get()`,\r\n                    totalQuery: \"db.collection('goods').count()\"\r\n                };\r\n                const response = await axios.post(\r\n                    `/wechat-api/tcb/databasequery?access_token=${accessToken}`,\r\n                    query\r\n                );\r\n                const [dataRes, countRes] = await Promise.all([\r\n                    axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, { env: CONFIG.env, query: query.query }),\r\n                    axios.post(`/wechat-api/tcb/databasecount?access_token=${accessToken}`, { env: CONFIG.env, query: query.totalQuery })\r\n                ]);\r\n                const newData = dataRes.data.data.map(item => JSON.parse(item));\r\n                if (JSON.stringify(newData) !== JSON.stringify(this.goodsData)) {\r\n                    this.goodsData = newData;\r\n                    this.total = countRes.data.count;\r\n                }\r\n                return response.data;\r\n            } catch (error) {\r\n                console.error('查询云数据库失败:', error);\r\n                throw error;\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        // 首次加载数据\r\n        this.queryCloudDatabase();\r\n        // 启动定时器（每5秒请求一次）\r\n        this.timer = setInterval(() => {\r\n            this.queryCloudDatabase().catch(() => { });\r\n        }, 10000);\r\n    },\r\n    beforeUnmount() {\r\n        // 组件卸载时清除定时器\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n            this.timer = null;\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n<style scoped>\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n}\r\n\r\nth,\r\ntd {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n    text-align: left;\r\n}\r\n\r\nth {\r\n    background-color: #f2f2f2;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}