{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, \" categoriesList \");\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["C:\\Users\\Administrator\\Desktop\\小程序后台\\coffeeshop\\src\\components\\order\\categories.vue"],"sourcesContent":["<template>\r\n    <div id=\"container\">\r\n        categoriesList\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\n\r\nexport default {\r\n    name: 'categoriesList',\r\n    data() {\r\n        return {\r\n        }\r\n    },\r\n    methods: {\r\n        // 将数据上传到微信云数据库\r\n        async handleUpload() {\r\n            try {\r\n                const accessToken = await getAccessToken();\r\n                const dataToUpload = {\r\n                    good: this.queryParam.good,\r\n                    name: this.queryParam.name,\r\n                    price: this.queryParam.price,\r\n                    category: this.queryParam.category,\r\n                    image: this.queryParam.image\r\n                };\r\n                // 由于 response 变量声明后未使用，直接执行请求，不保存响应结果\r\n                await axios.post(\r\n                    `/wechat-api/tcb/databaseadd?access_token=${accessToken}`,\r\n                    {\r\n                        env: CONFIG.env,\r\n                        query: `db.collection('goods').add({ data: ${JSON.stringify(dataToUpload)} })`\r\n                    }\r\n                );\r\n                this.$message.success('商品信息上传成功');\r\n            } catch (error) {\r\n                console.error('商品信息上传失败:', error);\r\n                this.$message.error('商品信息上传失败，请重试');\r\n            }\r\n        },\r\n        // 编辑商品信息\r\n        async submitEdit() {\r\n            try {\r\n                const accessToken = await getAccessToken();\r\n                const dataToUpdate = {\r\n                    good: this.editForm.good,\r\n                    name: this.editForm.name,\r\n                    price: this.editForm.price,\r\n                    category: this.editForm.category,\r\n                    image: this.editForm.image\r\n                };\r\n                await axios.post(\r\n                    `/wechat-api/tcb/databaseupdate?access_token=${accessToken}`,\r\n                    {\r\n                        env: CONFIG.env,\r\n                        query: `db.collection('goods').doc('${this.editForm._id}').update({ data: ${JSON.stringify(dataToUpdate)} })`\r\n                    }\r\n                );\r\n                this.$message.success('商品信息编辑成功');\r\n                this.dialogVisible = false;\r\n                this.queryCloudDatabase();\r\n            } catch (error) {\r\n                console.error('商品信息编辑失败:', error);\r\n                this.$message.error('商品信息编辑失败，请重试');\r\n            }\r\n        },\r\n        // 删除商品信息\r\n        async handleDelete(id) {\r\n            try {\r\n                const accessToken = await getAccessToken();\r\n                await axios.post(\r\n                    `/wechat-api/tcb/databasedelete?access_token=${accessToken}`,\r\n                    {\r\n                        env: CONFIG.env,\r\n                        query: `db.collection('goods').doc('${id}').remove()`\r\n                    }\r\n                );\r\n                this.$message.success('商品信息删除成功');\r\n                this.queryCloudDatabase();\r\n            } catch (error) {\r\n                console.error('商品信息删除失败:', error);\r\n                this.$message.error('商品信息删除失败，请重试');\r\n            }\r\n        },\r\n        // 查询云数据库\r\n        async queryCloudDatabase() {\r\n            try {\r\n                const accessToken = await getAccessToken();\r\n                const query = {\r\n                    env: CONFIG.env,\r\n                    query: `db.collection('goods').skip(${(this.queryParam.page - 1) * this.queryParam.limit}).limit(${this.queryParam.limit}).get()`,\r\n                    totalQuery: \"db.collection('goods').count()\"\r\n                };\r\n                const [dataRes, countRes] = await Promise.all([\r\n                    axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, { env: CONFIG.env, query: query.query }),\r\n                    axios.post(`/wechat-api/tcb/databasecount?access_token=${accessToken}`, { env: CONFIG.env, query: query.totalQuery })\r\n                ]);\r\n                const newData = dataRes.data.data.map(item => JSON.parse(item));\r\n                if (JSON.stringify(newData) !== JSON.stringify(this.goodsData)) {\r\n                    this.goodsData = newData;\r\n                    this.total = countRes.data.count;\r\n                }\r\n                return dataRes.data;\r\n            } catch (error) {\r\n                console.error('查询云数据库失败:', error);\r\n                throw error;\r\n            }\r\n        },\r\n        handleSizeChange(newSize) {\r\n            this.queryParam.limit = newSize;\r\n            this.queryCloudDatabase();\r\n        },\r\n        handlePageChange(newPage) {\r\n            this.queryParam.page = newPage;\r\n            this.queryCloudDatabase();\r\n        }\r\n    },\r\n    mounted() {\r\n        this.queryCloudDatabase();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n</script>\r\n<style scoped></style>"],"mappings":";;EACSA,EAAE,EAAC;AAAW;;uBAAnBC,mBAAA,CAEM,OAFNC,UAEM,EAFc,kBAEpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}