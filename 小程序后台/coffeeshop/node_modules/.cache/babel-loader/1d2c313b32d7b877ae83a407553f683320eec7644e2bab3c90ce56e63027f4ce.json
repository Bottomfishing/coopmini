{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport axios from 'axios';\n\n// 假设这些方法需要从 goods.vue 迁移过来\nconst getAccessToken = async function () {};\nexport default {\n  name: 'categoriesList',\n  data() {\n    return {};\n  },\n  methods: {\n    // 将数据上传到微信云数据库\n    async handleUpload() {\n      try {\n        const accessToken = await getAccessToken();\n        const dataToUpload = {\n          good: this.queryParam.good,\n          name: this.queryParam.name,\n          price: this.queryParam.price,\n          category: this.queryParam.category,\n          image: this.queryParam.image\n        };\n        // 由于 response 变量声明后未使用，直接执行请求，不保存响应结果\n        await axios.post(`/wechat-api/tcb/databaseadd?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: `db.collection('goods').add({ data: ${JSON.stringify(dataToUpload)} })`\n        });\n        this.$message.success('商品信息上传成功');\n      } catch (error) {\n        console.error('商品信息上传失败:', error);\n        this.$message.error('商品信息上传失败，请重试');\n      }\n    },\n    // 编辑商品信息\n    async submitEdit() {\n      try {\n        const accessToken = await getAccessToken();\n        const dataToUpdate = {\n          good: this.editForm.good,\n          name: this.editForm.name,\n          price: this.editForm.price,\n          category: this.editForm.category,\n          image: this.editForm.image\n        };\n        await axios.post(`/wechat-api/tcb/databaseupdate?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: `db.collection('goods').doc('${this.editForm._id}').update({ data: ${JSON.stringify(dataToUpdate)} })`\n        });\n        this.$message.success('商品信息编辑成功');\n        this.dialogVisible = false;\n        this.queryCloudDatabase();\n      } catch (error) {\n        console.error('商品信息编辑失败:', error);\n        this.$message.error('商品信息编辑失败，请重试');\n      }\n    },\n    // 删除商品信息\n    async handleDelete(id) {\n      try {\n        const accessToken = await getAccessToken();\n        await axios.post(`/wechat-api/tcb/databasedelete?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: `db.collection('goods').doc('${id}').remove()`\n        });\n        this.$message.success('商品信息删除成功');\n        this.queryCloudDatabase();\n      } catch (error) {\n        console.error('商品信息删除失败:', error);\n        this.$message.error('商品信息删除失败，请重试');\n      }\n    },\n    // 查询云数据库\n    async queryCloudDatabase() {\n      try {\n        const accessToken = await getAccessToken();\n        const query = {\n          env: CONFIG.env,\n          query: `db.collection('goods').skip(${(this.queryParam.page - 1) * this.queryParam.limit}).limit(${this.queryParam.limit}).get()`,\n          totalQuery: \"db.collection('goods').count()\"\n        };\n        const [dataRes, countRes] = await Promise.all([axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: query.query\n        }), axios.post(`/wechat-api/tcb/databasecount?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: query.totalQuery\n        })]);\n        const newData = dataRes.data.data.map(item => JSON.parse(item));\n        if (JSON.stringify(newData) !== JSON.stringify(this.goodsData)) {\n          this.goodsData = newData;\n          this.total = countRes.data.count;\n        }\n        return dataRes.data;\n      } catch (error) {\n        console.error('查询云数据库失败:', error);\n        throw error;\n      }\n    },\n    handleSizeChange(newSize) {\n      this.queryParam.limit = newSize;\n      this.queryCloudDatabase();\n    },\n    handlePageChange(newPage) {\n      this.queryParam.page = newPage;\n      this.queryCloudDatabase();\n    }\n  },\n  mounted() {\n    this.queryCloudDatabase();\n  }\n};","map":{"version":3,"names":["axios","getAccessToken","name","data","methods","handleUpload","accessToken","dataToUpload","good","queryParam","price","category","image","post","env","CONFIG","query","JSON","stringify","$message","success","error","console","submitEdit","dataToUpdate","editForm","_id","dialogVisible","queryCloudDatabase","handleDelete","id","page","limit","totalQuery","dataRes","countRes","Promise","all","newData","map","item","parse","goodsData","total","count","handleSizeChange","newSize","handlePageChange","newPage","mounted"],"sources":["C:\\Users\\Administrator\\Desktop\\小程序后台\\coffeeshop\\src\\components\\order\\categories.vue"],"sourcesContent":["<template>\r\n    <div id=\"container\">\r\n        categoriesList\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n// 假设这些方法需要从 goods.vue 迁移过来\r\nconst getAccessToken = async function () {\r\n};\r\n\r\nexport default {\r\n    name: 'categoriesList',\r\n    data() {\r\n        return {\r\n        }\r\n    },\r\n    methods: {\r\n        // 将数据上传到微信云数据库\r\n        async handleUpload() {\r\n            try {\r\n                const accessToken = await getAccessToken();\r\n                const dataToUpload = {\r\n                    good: this.queryParam.good,\r\n                    name: this.queryParam.name,\r\n                    price: this.queryParam.price,\r\n                    category: this.queryParam.category,\r\n                    image: this.queryParam.image\r\n                };\r\n                // 由于 response 变量声明后未使用，直接执行请求，不保存响应结果\r\n                await axios.post(\r\n                    `/wechat-api/tcb/databaseadd?access_token=${accessToken}`,\r\n                    {\r\n                        env: CONFIG.env,\r\n                        query: `db.collection('goods').add({ data: ${JSON.stringify(dataToUpload)} })`\r\n                    }\r\n                );\r\n                this.$message.success('商品信息上传成功');\r\n            } catch (error) {\r\n                console.error('商品信息上传失败:', error);\r\n                this.$message.error('商品信息上传失败，请重试');\r\n            }\r\n        },\r\n        // 编辑商品信息\r\n        async submitEdit() {\r\n            try {\r\n                const accessToken = await getAccessToken();\r\n                const dataToUpdate = {\r\n                    good: this.editForm.good,\r\n                    name: this.editForm.name,\r\n                    price: this.editForm.price,\r\n                    category: this.editForm.category,\r\n                    image: this.editForm.image\r\n                };\r\n                await axios.post(\r\n                    `/wechat-api/tcb/databaseupdate?access_token=${accessToken}`,\r\n                    {\r\n                        env: CONFIG.env,\r\n                        query: `db.collection('goods').doc('${this.editForm._id}').update({ data: ${JSON.stringify(dataToUpdate)} })`\r\n                    }\r\n                );\r\n                this.$message.success('商品信息编辑成功');\r\n                this.dialogVisible = false;\r\n                this.queryCloudDatabase();\r\n            } catch (error) {\r\n                console.error('商品信息编辑失败:', error);\r\n                this.$message.error('商品信息编辑失败，请重试');\r\n            }\r\n        },\r\n        // 删除商品信息\r\n        async handleDelete(id) {\r\n            try {\r\n                const accessToken = await getAccessToken();\r\n                await axios.post(\r\n                    `/wechat-api/tcb/databasedelete?access_token=${accessToken}`,\r\n                    {\r\n                        env: CONFIG.env,\r\n                        query: `db.collection('goods').doc('${id}').remove()`\r\n                    }\r\n                );\r\n                this.$message.success('商品信息删除成功');\r\n                this.queryCloudDatabase();\r\n            } catch (error) {\r\n                console.error('商品信息删除失败:', error);\r\n                this.$message.error('商品信息删除失败，请重试');\r\n            }\r\n        },\r\n        // 查询云数据库\r\n        async queryCloudDatabase() {\r\n            try {\r\n                const accessToken = await getAccessToken();\r\n                const query = {\r\n                    env: CONFIG.env,\r\n                    query: `db.collection('goods').skip(${(this.queryParam.page - 1) * this.queryParam.limit}).limit(${this.queryParam.limit}).get()`,\r\n                    totalQuery: \"db.collection('goods').count()\"\r\n                };\r\n                const [dataRes, countRes] = await Promise.all([\r\n                    axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, { env: CONFIG.env, query: query.query }),\r\n                    axios.post(`/wechat-api/tcb/databasecount?access_token=${accessToken}`, { env: CONFIG.env, query: query.totalQuery })\r\n                ]);\r\n                const newData = dataRes.data.data.map(item => JSON.parse(item));\r\n                if (JSON.stringify(newData) !== JSON.stringify(this.goodsData)) {\r\n                    this.goodsData = newData;\r\n                    this.total = countRes.data.count;\r\n                }\r\n                return dataRes.data;\r\n            } catch (error) {\r\n                console.error('查询云数据库失败:', error);\r\n                throw error;\r\n            }\r\n        },\r\n        handleSizeChange(newSize) {\r\n            this.queryParam.limit = newSize;\r\n            this.queryCloudDatabase();\r\n        },\r\n        handlePageChange(newPage) {\r\n            this.queryParam.page = newPage;\r\n            this.queryCloudDatabase();\r\n        }\r\n    },\r\n    mounted() {\r\n        this.queryCloudDatabase();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n</script>\r\n<style scoped></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}