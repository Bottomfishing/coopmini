{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nconst axios = require('axios');\n// 配置常量\nconst CONFIG = {\n  appId: 'wx6872b1e938e23c07',\n  appSecret: 'bb0342f524bf2fe87416defe5797f40a',\n  env: 'cloud1-6gzxjy5k59c1f367'\n};\nexport default {\n  name: 'goodsList',\n  data() {\n    return {\n      goodsData: [],\n      timer: null,\n      queryParam: {\n        page: 1,\n        pageSize: 10\n      },\n      totalCount: 0\n    };\n  },\n  methods: {\n    // 获取微信访问令牌\n    async getAccessToken() {\n      try {\n        const response = await axios.get('/cgi-bin/token', {\n          params: {\n            grant_type: 'client_credential',\n            appid: CONFIG.appId,\n            secret: CONFIG.appSecret\n          }\n        });\n        return response.data.access_token;\n      } catch (error) {\n        console.error('获取访问令牌失败:', error);\n        throw error;\n      }\n    },\n    // 查询云数据库\n    async queryCloudDatabase() {\n      try {\n        const accessToken = await this.getAccessToken();\n        this.queryParam.page = 1;\n        const query = {\n          env: CONFIG.env,\n          query: \"db.collection('goods').skip(\" + (this.queryParam.page - 1) * this.queryParam.pageSize + \").limit(\" + this.queryParam.pageSize + \").get()\",\n          offset: (this.queryParam.page - 1) * this.queryParam.pageSize,\n          limit: this.queryParam.pageSize\n        };\n        const response = await axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, query);\n        this.goodsData = response.data.data.map(item => JSON.parse(item));\n        this.totalCount = response.data.pager.Total;\n        return response.data;\n      } catch (error) {\n        console.error('查询云数据库失败:', error);\n        throw error;\n      }\n    }\n  },\n  mounted() {\n    // 首次加载数据\n    this.queryCloudDatabase();\n    // 启动定时器（每5秒请求一次）\n    this.timer = setInterval(() => {\n      this.queryCloudDatabase();\n    }, 5000);\n  },\n  beforeUnmount() {\n    // 组件卸载时清除定时器\n    if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","require","CONFIG","appId","appSecret","env","name","data","goodsData","timer","queryParam","page","pageSize","totalCount","methods","getAccessToken","response","get","params","grant_type","appid","secret","access_token","error","console","queryCloudDatabase","accessToken","query","offset","limit","post","map","item","JSON","parse","pager","Total","mounted","setInterval","beforeUnmount","clearInterval"],"sources":["C:\\Users\\Administrator\\Desktop\\小程序后台\\coffeeshop\\src\\components\\order\\goods.vue"],"sourcesContent":["<template>\r\n\r\n\r\n\r\n\r\n    <div>\r\n        <table v-if=\"goodsData.length > 0\">\r\n            <thead>\r\n                <tr>\r\n                    <th>商品ID</th>\r\n                    <th>商品名称</th>\r\n                    <th>价格</th>\r\n                    <th>分类</th>\r\n                    <th>图片</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"(item, index) in goodsData\" :key=\"index\">\r\n                    <td>{{ item._id }}</td>\r\n                    <td>{{ item.name }}</td>\r\n                    <td>{{ item.price }}</td>\r\n                    <td>{{ item.category }}</td>\r\n                    <td>\r\n                        <img :src=\"item.image\" alt=\"商品图片\" style=\"width: 100px; height: 100px;\">\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <el-pagination v-model:current-page=\"queryParam.page\" v-model:page-size=\"queryParam.pageSize\"\r\n            :page-sizes=\"[10, 20, 30]\" layout=\"total, sizes, prev, pager, next\" :total=\"totalCount\"\r\n            @current-change=\"queryCloudDatabase\" @size-change=\"queryCloudDatabase\" />\r\n        <p v-else>正在加载数据...</p>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nconst axios = require('axios');\r\n// 配置常量\r\nconst CONFIG = {\r\n    appId: 'wx6872b1e938e23c07',\r\n    appSecret: 'bb0342f524bf2fe87416defe5797f40a',\r\n    env: 'cloud1-6gzxjy5k59c1f367'\r\n};\r\n\r\nexport default {\r\n    name: 'goodsList',\r\n    data() {\r\n        return {\r\n            goodsData: [],\r\n            timer: null,\r\n            queryParam: {\r\n                page: 1,\r\n                pageSize: 10,\r\n            },\r\n            totalCount: 0,\r\n        };\r\n    },\r\n    methods: {\r\n        // 获取微信访问令牌\r\n        async getAccessToken() {\r\n            try {\r\n                const response = await axios.get('/cgi-bin/token', {\r\n                    params: {\r\n                        grant_type: 'client_credential',\r\n                        appid: CONFIG.appId,\r\n                        secret: CONFIG.appSecret\r\n                    }\r\n                });\r\n                return response.data.access_token;\r\n            } catch (error) {\r\n                console.error('获取访问令牌失败:', error);\r\n                throw error;\r\n            }\r\n        },\r\n\r\n        // 查询云数据库\r\n        async queryCloudDatabase() {\r\n            try {\r\n                const accessToken = await this.getAccessToken();\r\n                this.queryParam.page = 1;\r\n                const query = {\r\n                    env: CONFIG.env,\r\n                    query: \"db.collection('goods').skip(\" + ((this.queryParam.page - 1) * this.queryParam.pageSize) + \").limit(\" + this.queryParam.pageSize + \").get()\",\r\n                    offset: (this.queryParam.page - 1) * this.queryParam.pageSize,\r\n                    limit: this.queryParam.pageSize\r\n                };\r\n                const response = await axios.post(\r\n                    `/wechat-api/tcb/databasequery?access_token=${accessToken}`,\r\n                    query\r\n                );\r\n                this.goodsData = response.data.data.map(item => JSON.parse(item));\r\n                this.totalCount = response.data.pager.Total;\r\n                return response.data;\r\n            } catch (error) {\r\n                console.error('查询云数据库失败:', error);\r\n                throw error;\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        // 首次加载数据\r\n        this.queryCloudDatabase();\r\n        // 启动定时器（每5秒请求一次）\r\n        this.timer = setInterval(() => {\r\n            this.queryCloudDatabase();\r\n        }, 5000);\r\n    },\r\n    beforeUnmount() {\r\n        // 组件卸载时清除定时器\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n            this.timer = null;\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n<style scoped>\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n}\r\n\r\nth,\r\ntd {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n    text-align: left;\r\n}\r\n\r\nth {\r\n    background-color: #f2f2f2;\r\n}\r\n</style>"],"mappings":";;AAsCA,MAAMA,KAAI,GAAIC,OAAO,CAAC,OAAO,CAAC;AAC9B;AACA,MAAMC,MAAK,GAAI;EACXC,KAAK,EAAE,oBAAoB;EAC3BC,SAAS,EAAE,kCAAkC;EAC7CC,GAAG,EAAE;AACT,CAAC;AAED,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE,EAAE;MACbC,KAAK,EAAE,IAAI;MACXC,UAAU,EAAE;QACRC,IAAI,EAAE,CAAC;QACPC,QAAQ,EAAE;MACd,CAAC;MACDC,UAAU,EAAE;IAChB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL;IACA,MAAMC,cAAcA,CAAA,EAAG;MACnB,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CAAC,gBAAgB,EAAE;UAC/CC,MAAM,EAAE;YACJC,UAAU,EAAE,mBAAmB;YAC/BC,KAAK,EAAElB,MAAM,CAACC,KAAK;YACnBkB,MAAM,EAAEnB,MAAM,CAACE;UACnB;QACJ,CAAC,CAAC;QACF,OAAOY,QAAQ,CAACT,IAAI,CAACe,YAAY;MACrC,EAAE,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC,MAAMA,KAAK;MACf;IACJ,CAAC;IAED;IACA,MAAME,kBAAkBA,CAAA,EAAG;MACvB,IAAI;QACA,MAAMC,WAAU,GAAI,MAAM,IAAI,CAACX,cAAc,CAAC,CAAC;QAC/C,IAAI,CAACL,UAAU,CAACC,IAAG,GAAI,CAAC;QACxB,MAAMgB,KAAI,GAAI;UACVtB,GAAG,EAAEH,MAAM,CAACG,GAAG;UACfsB,KAAK,EAAE,8BAA6B,GAAK,CAAC,IAAI,CAACjB,UAAU,CAACC,IAAG,GAAI,CAAC,IAAI,IAAI,CAACD,UAAU,CAACE,QAAQ,GAAI,UAAS,GAAI,IAAI,CAACF,UAAU,CAACE,QAAO,GAAI,SAAS;UACnJgB,MAAM,EAAE,CAAC,IAAI,CAAClB,UAAU,CAACC,IAAG,GAAI,CAAC,IAAI,IAAI,CAACD,UAAU,CAACE,QAAQ;UAC7DiB,KAAK,EAAE,IAAI,CAACnB,UAAU,CAACE;QAC3B,CAAC;QACD,MAAMI,QAAO,GAAI,MAAMhB,KAAK,CAAC8B,IAAI,CAC7B,8CAA8CJ,WAAW,EAAE,EAC3DC,KACJ,CAAC;QACD,IAAI,CAACnB,SAAQ,GAAIQ,QAAQ,CAACT,IAAI,CAACA,IAAI,CAACwB,GAAG,CAACC,IAAG,IAAKC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,CAAC;QACjE,IAAI,CAACnB,UAAS,GAAIG,QAAQ,CAACT,IAAI,CAAC4B,KAAK,CAACC,KAAK;QAC3C,OAAOpB,QAAQ,CAACT,IAAI;MACxB,EAAE,OAAOgB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC,MAAMA,KAAK;MACf;IACJ;EACJ,CAAC;EACDc,OAAOA,CAAA,EAAG;IACN;IACA,IAAI,CAACZ,kBAAkB,CAAC,CAAC;IACzB;IACA,IAAI,CAAChB,KAAI,GAAI6B,WAAW,CAAC,MAAM;MAC3B,IAAI,CAACb,kBAAkB,CAAC,CAAC;IAC7B,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EACDc,aAAaA,CAAA,EAAG;IACZ;IACA,IAAI,IAAI,CAAC9B,KAAK,EAAE;MACZ+B,aAAa,CAAC,IAAI,CAAC/B,KAAK,CAAC;MACzB,IAAI,CAACA,KAAI,GAAI,IAAI;IACrB;EACJ;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}