{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nconst axios = require('axios');\nconst CONFIG = {\n  appId: 'wx6872b1e938e23c07',\n  appSecret: 'bb0342f524bf2fe87416defe5797f40a',\n  env: 'cloud1-6gzxjy5k59c1f367'\n};\nexport default {\n  name: 'goodsCategoriesList',\n  data() {\n    return {\n      editForm: {},\n      queryParam: {},\n      total: 0,\n      goodsData: [],\n      timer: null\n    };\n  },\n  methods: {\n    // 将数据上传到微信云数据库\n\n    // 获取微信访问令牌\n    async getAccessToken() {\n      try {\n        const response = await axios.get('/cgi-bin/token', {\n          params: {\n            grant_type: 'client_credential',\n            appid: CONFIG.appId,\n            secret: CONFIG.appSecret\n          }\n        });\n        return response.data.access_token;\n      } catch (error) {\n        console.error('获取访问令牌失败:', error);\n        throw error;\n      }\n    },\n    handleUploadSuccess(response) {\n      this.queryParam.image = response.imageUrl;\n      this.$message.success('图片上传成功');\n    },\n    // 提交编辑信息\n    async submitEdit() {\n      try {\n        const accessToken = await this.getAccessToken();\n        const dataToUpdate = {\n          good: this.editForm.good,\n          name: this.editForm.name,\n          price: this.editForm.price,\n          category: this.editForm.category,\n          image: this.editForm.image\n        };\n        await axios.post(`/wechat-api/tcb/databaseupdate?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: `db.collection('goods').doc('${this.editForm._id}').update({ data: ${JSON.stringify(dataToUpdate)} })`\n        });\n        this.$message.success('商品信息编辑成功');\n        this.dialogVisible = false;\n        this.queryCloudDatabase();\n      } catch (error) {\n        console.error('商品信息编辑失败:', error);\n        this.$message.error('商品信息编辑失败，请重试');\n      }\n    },\n    // 编辑商品信息并上传到云数据库\n    async handleEdit(item) {\n      this.editForm = {\n        _id: item._id,\n        good: item.good,\n        name: item.name,\n        price: item.price,\n        category: item.category,\n        image: item.image\n      };\n      this.dialogVisible = true;\n      try {\n        const accessToken = await this.getAccessToken();\n        const dataToUpdate = {\n          good: item.good,\n          name: item.name,\n          price: item.price,\n          category: item.category,\n          image: item.image\n        };\n        await axios.post(`/wechat-api/tcb/databaseupdate?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: `db.collection('goods').doc('${item._id}').update({ data: ${JSON.stringify(dataToUpdate)} })`\n        });\n        this.queryCloudDatabase();\n      } catch (error) {\n        console.error('商品信息编辑失败:', error);\n        this.$message.error('商品信息编辑失败，请重试');\n      }\n    },\n    // 删除商品信息\n    async handleDelete(id) {\n      try {\n        const accessToken = await this.getAccessToken();\n        await axios.post(`/wechat-api/tcb/databasedelete?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: `db.collection('goods').doc('${id}').remove()`\n        });\n        this.$message.success('商品删除成功');\n        this.queryCloudDatabase();\n      } catch (error) {\n        console.error('商品删除失败:', error);\n        this.$message.error('商品删除失败，请重试');\n      }\n    },\n    // 查询云数据库\n    async queryCloudDatabase() {\n      try {\n        const accessToken = await this.getAccessToken();\n        const query = {\n          env: CONFIG.env,\n          query: `db.collection('goods').skip(${(this.queryParam.page - 1) * this.queryParam.limit}).limit(${this.queryParam.limit}).get()`,\n          totalQuery: \"db.collection('goods').count()\"\n        };\n        const response = await axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, query);\n        const [dataRes, countRes] = await Promise.all([axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: query.query\n        }), axios.post(`/wechat-api/tcb/databasecount?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: query.totalQuery\n        })]);\n        const newData = dataRes.data.data.map(item => JSON.parse(item));\n        if (JSON.stringify(newData) !== JSON.stringify(this.goodsData)) {\n          this.goodsData = newData;\n          this.total = countRes.data.count;\n        }\n        return response.data;\n      } catch (error) {\n        console.error('查询云数据库失败:', error);\n        throw error;\n      }\n    }\n  },\n  mounted() {\n    // 首次加载数据\n    this.queryCloudDatabase();\n    // 启动定时器（每5秒请求一次）\n    this.timer = setInterval(() => {\n      this.queryCloudDatabase().catch(() => {});\n    }, 10000);\n  },\n  beforeUnmount() {\n    // 组件卸载时清除定时器\n    if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","require","CONFIG","appId","appSecret","env","name","data","editForm","queryParam","total","goodsData","timer","methods","getAccessToken","response","get","params","grant_type","appid","secret","access_token","error","console","handleUploadSuccess","image","imageUrl","$message","success","submitEdit","accessToken","dataToUpdate","good","price","category","post","query","_id","JSON","stringify","dialogVisible","queryCloudDatabase","handleEdit","item","handleDelete","id","page","limit","totalQuery","dataRes","countRes","Promise","all","newData","map","parse","count","mounted","setInterval","catch","beforeUnmount","clearInterval"],"sources":["C:\\Users\\Administrator\\Desktop\\小程序后台\\coffeeshop\\src\\components\\order\\categories.vue"],"sourcesContent":["<template>\r\n    <div id=\"container\">\r\n        categoriesList\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nconst axios = require('axios');\r\nconst CONFIG = {\r\n    appId: 'wx6872b1e938e23c07',\r\n    appSecret: 'bb0342f524bf2fe87416defe5797f40a',\r\n    env: 'cloud1-6gzxjy5k59c1f367'\r\n};\r\nexport default {\r\n    name: 'goodsCategoriesList',\r\n    data() {\r\n        return {\r\n            editForm: {\r\n            },\r\n            queryParam: {\r\n            },\r\n            total: 0,\r\n            goodsData: [],\r\n            timer: null,\r\n        };\r\n    },\r\n    methods: {\r\n        // 将数据上传到微信云数据库\r\n      \r\n        // 获取微信访问令牌\r\n        async getAccessToken() {\r\n            try {\r\n                const response = await axios.get('/cgi-bin/token', {\r\n                    params: {\r\n                        grant_type: 'client_credential',\r\n                        appid: CONFIG.appId,\r\n                        secret: CONFIG.appSecret\r\n                    }\r\n                });\r\n                return response.data.access_token;\r\n            } catch (error) {\r\n                console.error('获取访问令牌失败:', error);\r\n                throw error;\r\n            }\r\n        },\r\n\r\n        handleUploadSuccess(response) {\r\n            this.queryParam.image = response.imageUrl;\r\n            this.$message.success('图片上传成功');\r\n        },\r\n\r\n        // 提交编辑信息\r\n        async submitEdit() {\r\n            try {\r\n                const accessToken = await this.getAccessToken();\r\n                const dataToUpdate = {\r\n                    good: this.editForm.good,\r\n                    name: this.editForm.name,\r\n                    price: this.editForm.price,\r\n                    category: this.editForm.category,\r\n                    image: this.editForm.image\r\n                };\r\n                await axios.post(\r\n                    `/wechat-api/tcb/databaseupdate?access_token=${accessToken}`,\r\n                    {\r\n                        env: CONFIG.env,\r\n                        query: `db.collection('goods').doc('${this.editForm._id}').update({ data: ${JSON.stringify(dataToUpdate)} })`\r\n                    }\r\n                );\r\n                this.$message.success('商品信息编辑成功');\r\n                this.dialogVisible = false;\r\n                this.queryCloudDatabase();\r\n            } catch (error) {\r\n                console.error('商品信息编辑失败:', error);\r\n                this.$message.error('商品信息编辑失败，请重试');\r\n            }\r\n        },\r\n\r\n        // 编辑商品信息并上传到云数据库\r\n        async handleEdit(item) {\r\n            this.editForm = {\r\n                _id: item._id,\r\n                good: item.good,\r\n                name: item.name,\r\n                price: item.price,\r\n                category: item.category,\r\n                image: item.image\r\n            };\r\n            this.dialogVisible = true;\r\n            try {\r\n                const accessToken = await this.getAccessToken();\r\n                const dataToUpdate = {\r\n                    good: item.good,\r\n                    name: item.name,\r\n                    price: item.price,\r\n                    category: item.category,\r\n                    image: item.image\r\n                };\r\n                await axios.post(\r\n                    `/wechat-api/tcb/databaseupdate?access_token=${accessToken}`,\r\n                    {\r\n                        env: CONFIG.env,\r\n                        query: `db.collection('goods').doc('${item._id}').update({ data: ${JSON.stringify(dataToUpdate)} })`\r\n                    });\r\n                this.queryCloudDatabase();\r\n            } catch (error) {\r\n                console.error('商品信息编辑失败:', error);\r\n                this.$message.error('商品信息编辑失败，请重试');\r\n            }\r\n        },\r\n\r\n        // 删除商品信息\r\n        async handleDelete(id) {\r\n            try {\r\n                const accessToken = await this.getAccessToken();\r\n                await axios.post(\r\n                    `/wechat-api/tcb/databasedelete?access_token=${accessToken}`,\r\n                    {\r\n                        env: CONFIG.env,\r\n                        query: `db.collection('goods').doc('${id}').remove()`\r\n                    }\r\n                );\r\n                this.$message.success('商品删除成功');\r\n                this.queryCloudDatabase();\r\n            } catch (error) {\r\n                console.error('商品删除失败:', error);\r\n                this.$message.error('商品删除失败，请重试');\r\n            }\r\n        },\r\n\r\n        // 查询云数据库\r\n        async queryCloudDatabase() {\r\n            try {\r\n                const accessToken = await this.getAccessToken();\r\n                const query = {\r\n                    env: CONFIG.env,\r\n                    query: `db.collection('goods').skip(${(this.queryParam.page - 1) * this.queryParam.limit}).limit(${this.queryParam.limit}).get()`,\r\n                    totalQuery: \"db.collection('goods').count()\"\r\n                };\r\n                const response = await axios.post(\r\n                    `/wechat-api/tcb/databasequery?access_token=${accessToken}`,\r\n                    query\r\n                );\r\n                const [dataRes, countRes] = await Promise.all([\r\n                    axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, { env: CONFIG.env, query: query.query }),\r\n                    axios.post(`/wechat-api/tcb/databasecount?access_token=${accessToken}`, { env: CONFIG.env, query: query.totalQuery })\r\n                ]);\r\n                const newData = dataRes.data.data.map(item => JSON.parse(item));\r\n                if (JSON.stringify(newData) !== JSON.stringify(this.goodsData)) {\r\n                    this.goodsData = newData;\r\n                    this.total = countRes.data.count;\r\n                }\r\n                return response.data;\r\n            } catch (error) {\r\n                console.error('查询云数据库失败:', error);\r\n                throw error;\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        // 首次加载数据\r\n        this.queryCloudDatabase();\r\n        // 启动定时器（每5秒请求一次）\r\n        this.timer = setInterval(() => {\r\n            this.queryCloudDatabase().catch(() => { });\r\n        }, 10000);\r\n    },\r\n    beforeUnmount() {\r\n        // 组件卸载时清除定时器\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n            this.timer = null;\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n<style scoped></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}