{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport axios from 'axios';\nexport default {\n  name: 'categoriesList',\n  data() {\n    return {};\n  },\n  methods: {\n    async queryCloudDatabase() {\n      try {\n        const accessToken = await getAccessToken();\n        const query = {\n          env: CONFIG.env,\n          query: `db.collection('goods').skip(${(this.queryParam.page - 1) * this.queryParam.limit}).limit(${this.queryParam.limit}).get()`,\n          totalQuery: \"db.collection('goods').count()\"\n        };\n        const [dataRes, countRes] = await Promise.all([axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: query.query\n        }), axios.post(`/wechat-api/tcb/databasecount?access_token=${accessToken}`, {\n          env: CONFIG.env,\n          query: query.totalQuery\n        })]);\n        const newData = dataRes.data.data.map(item => JSON.parse(item));\n        if (JSON.stringify(newData) !== JSON.stringify(this.goodsData)) {\n          this.goodsData = newData;\n          this.total = countRes.data.count;\n        }\n        return dataRes.data;\n      } catch (error) {\n        console.error('查询云数据库失败:', error);\n        throw error;\n      }\n    },\n    handleSizeChange(newSize) {\n      this.queryParam.limit = newSize;\n      this.queryCloudDatabase();\n    },\n    handlePageChange(newPage) {\n      this.queryParam.page = newPage;\n      this.queryCloudDatabase();\n    }\n  },\n  mounted() {\n    this.queryCloudDatabase();\n  }\n};","map":{"version":3,"names":["axios","name","data","methods","queryCloudDatabase","accessToken","getAccessToken","query","env","CONFIG","queryParam","page","limit","totalQuery","dataRes","countRes","Promise","all","post","newData","map","item","JSON","parse","stringify","goodsData","total","count","error","console","handleSizeChange","newSize","handlePageChange","newPage","mounted"],"sources":["C:\\Users\\Administrator\\Desktop\\小程序后台\\coffeeshop\\src\\components\\order\\categories.vue"],"sourcesContent":["<template>\r\n    <div id=\"container\">\r\n        categoriesList\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\n\r\nexport default {\r\n    name: 'categoriesList',\r\n    data() {\r\n        return {\r\n        }\r\n    },\r\n    methods: {\r\n       \r\n        async queryCloudDatabase() {\r\n            try {\r\n                const accessToken = await getAccessToken();\r\n                const query = {\r\n                    env: CONFIG.env,\r\n                    query: `db.collection('goods').skip(${(this.queryParam.page - 1) * this.queryParam.limit}).limit(${this.queryParam.limit}).get()`,\r\n                    totalQuery: \"db.collection('goods').count()\"\r\n                };\r\n                const [dataRes, countRes] = await Promise.all([\r\n                    axios.post(`/wechat-api/tcb/databasequery?access_token=${accessToken}`, { env: CONFIG.env, query: query.query }),\r\n                    axios.post(`/wechat-api/tcb/databasecount?access_token=${accessToken}`, { env: CONFIG.env, query: query.totalQuery })\r\n                ]);\r\n                const newData = dataRes.data.data.map(item => JSON.parse(item));\r\n                if (JSON.stringify(newData) !== JSON.stringify(this.goodsData)) {\r\n                    this.goodsData = newData;\r\n                    this.total = countRes.data.count;\r\n                }\r\n                return dataRes.data;\r\n            } catch (error) {\r\n                console.error('查询云数据库失败:', error);\r\n                throw error;\r\n            }\r\n        },\r\n\r\n        handleSizeChange(newSize) {\r\n            this.queryParam.limit = newSize;\r\n            this.queryCloudDatabase();\r\n        },\r\n        \r\n        handlePageChange(newPage) {\r\n            this.queryParam.page = newPage;\r\n            this.queryCloudDatabase();\r\n        }\r\n    },\r\n    mounted() {\r\n        this.queryCloudDatabase();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n</script>\r\n<style scoped></style>"],"mappings":";;AAQA,OAAOA,KAAI,MAAO,OAAO;AAGzB,eAAe;EACXC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACH,OAAO,CACP;EACJ,CAAC;EACDC,OAAO,EAAE;IAEL,MAAMC,kBAAkBA,CAAA,EAAG;MACvB,IAAI;QACA,MAAMC,WAAU,GAAI,MAAMC,cAAc,CAAC,CAAC;QAC1C,MAAMC,KAAI,GAAI;UACVC,GAAG,EAAEC,MAAM,CAACD,GAAG;UACfD,KAAK,EAAE,+BAA+B,CAAC,IAAI,CAACG,UAAU,CAACC,IAAG,GAAI,CAAC,IAAI,IAAI,CAACD,UAAU,CAACE,KAAK,WAAW,IAAI,CAACF,UAAU,CAACE,KAAK,SAAS;UACjIC,UAAU,EAAE;QAChB,CAAC;QACD,MAAM,CAACC,OAAO,EAAEC,QAAQ,IAAI,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC1CjB,KAAK,CAACkB,IAAI,CAAC,8CAA8Cb,WAAW,EAAE,EAAE;UAAEG,GAAG,EAAEC,MAAM,CAACD,GAAG;UAAED,KAAK,EAAEA,KAAK,CAACA;QAAM,CAAC,CAAC,EAChHP,KAAK,CAACkB,IAAI,CAAC,8CAA8Cb,WAAW,EAAE,EAAE;UAAEG,GAAG,EAAEC,MAAM,CAACD,GAAG;UAAED,KAAK,EAAEA,KAAK,CAACM;QAAW,CAAC,EACvH,CAAC;QACF,MAAMM,OAAM,GAAIL,OAAO,CAACZ,IAAI,CAACA,IAAI,CAACkB,GAAG,CAACC,IAAG,IAAKC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,CAAC;QAC/D,IAAIC,IAAI,CAACE,SAAS,CAACL,OAAO,MAAMG,IAAI,CAACE,SAAS,CAAC,IAAI,CAACC,SAAS,CAAC,EAAE;UAC5D,IAAI,CAACA,SAAQ,GAAIN,OAAO;UACxB,IAAI,CAACO,KAAI,GAAIX,QAAQ,CAACb,IAAI,CAACyB,KAAK;QACpC;QACA,OAAOb,OAAO,CAACZ,IAAI;MACvB,EAAE,OAAO0B,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC,MAAMA,KAAK;MACf;IACJ,CAAC;IAEDE,gBAAgBA,CAACC,OAAO,EAAE;MACtB,IAAI,CAACrB,UAAU,CAACE,KAAI,GAAImB,OAAO;MAC/B,IAAI,CAAC3B,kBAAkB,CAAC,CAAC;IAC7B,CAAC;IAED4B,gBAAgBA,CAACC,OAAO,EAAE;MACtB,IAAI,CAACvB,UAAU,CAACC,IAAG,GAAIsB,OAAO;MAC9B,IAAI,CAAC7B,kBAAkB,CAAC,CAAC;IAC7B;EACJ,CAAC;EACD8B,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC9B,kBAAkB,CAAC,CAAC;EAC7B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}